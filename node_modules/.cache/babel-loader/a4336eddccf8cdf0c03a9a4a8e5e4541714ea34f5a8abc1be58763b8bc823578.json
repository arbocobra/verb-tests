{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/AltVerbs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startTest } from '../app/verbsSlice';\n\n// import Selection from './Selection';\n// import Test from './Test';\n\nimport AltSelection from './AltSelection';\nimport AltTest from './AltTest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltVerbs = () => {\n  _s();\n  const [displayQuestion, setDisplayQuestion] = useState(false);\n  const isFirstRender = useRef(true);\n  // const onFirstRender = () => isFirstRender.current = false\n  const onFirstRender = () => console.log('first render: AltVerbs');\n  useEffect(() => onFirstRender(), []);\n  const updatePage = () => {\n    document.getElementById('selection').classList.add('hidden');\n    setDisplayQuestion(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"verbs\",\n    children: displayQuestion ? /*#__PURE__*/_jsxDEV(AltTest, {\n      displayQuestion: displayQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(AltSelection, {\n      updatePage: updatePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 78\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(AltVerbs, \"gNEOwBSc1h2ObjgXWNg9t7fnm9Q=\");\n_c = AltVerbs;\nexport default AltVerbs;\nvar _c;\n$RefreshReg$(_c, \"AltVerbs\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","startTest","AltSelection","AltTest","jsxDEV","_jsxDEV","AltVerbs","_s","displayQuestion","setDisplayQuestion","isFirstRender","onFirstRender","console","log","updatePage","document","getElementById","classList","add","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/AltVerbs.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { startTest } from '../app/verbsSlice';\n\n// import Selection from './Selection';\n// import Test from './Test';\n\nimport AltSelection from './AltSelection';\nimport AltTest from './AltTest';\n\nconst AltVerbs = () => {\n\n   const [displayQuestion, setDisplayQuestion] = useState(false)\n\n   const isFirstRender = useRef(true)\n   // const onFirstRender = () => isFirstRender.current = false\n   const onFirstRender = () => console.log('first render: AltVerbs')\n   \n   useEffect(() => onFirstRender(), []);\n\n   const updatePage = () => {\n      document.getElementById('selection').classList.add('hidden')\n      setDisplayQuestion(true)\n   }\n\n   return (\n      <div id='verbs'>\n         {/* { displayQuestion ? <Test displayQuestion={displayQuestion} /> : <Selection updatePage={updatePage} /> }         */}\n         { displayQuestion ? <AltTest displayQuestion={displayQuestion} /> : <AltSelection updatePage={updatePage} /> } \n      </div>\n   )\n}\n\nexport default AltVerbs"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,SAAS,QAAQ,mBAAmB;;AAE7C;AACA;;AAEA,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMc,aAAa,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAClC;EACA,MAAMa,aAAa,GAAGA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EAEjEhB,SAAS,CAAC,MAAMc,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC;EAEpC,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACtBC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAC5DT,kBAAkB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,oBACGJ,OAAA;IAAKc,EAAE,EAAC,OAAO;IAAAC,QAAA,EAEVZ,eAAe,gBAAGH,OAAA,CAACF,OAAO;MAACK,eAAe,EAAEA;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGnB,OAAA,CAACH,YAAY;MAACY,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1G,CAAC;AAEZ,CAAC;AAAAjB,EAAA,CArBKD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAuBd,eAAeA,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}