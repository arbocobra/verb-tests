{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const verbsSlice = createSlice({\n  name: 'verbs',\n  initialState: {\n    allVerbs: {},\n    tenseSelection: []\n    // filteredVerbs: {},\n  },\n  reducers: {\n    loadData: (state, action) => {\n      state.allVerbs = action.payload;\n    },\n    selectTense: (state, action) => {\n      state.tenseSelection = action.payload;\n    }\n  }\n});\n\n// const selectAllVerbs = (state) => state.verbs.allVerbs;\n// const selectTense = (state) => state.verbs.tenseSelection\n\nexport const selectFilteredAllVerbs = state => {\n  const allVerbs = state.verbs.allVerbs;\n  const allTense = state.verbs.tenseSelection;\n  if (allTense[0] === 'all') return allVerbs;else {\n    let filteredVerbs = {};\n    for (let verb in allVerbs) {\n      let isIncluded = allTense.includes(allVerbs[verb].tense);\n      if (isIncluded) filteredVerbs[verb] = allVerbs[verb];\n    }\n    return filteredVerbs;\n  }\n\n  // const filter = selectSearchTerm(state);\n\n  // return allRecipes.filter((recipe) =>\n  //   recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n  // );\n};\nexport const {\n  loadData,\n  selectTense\n} = verbsSlice.actions;\nexport default verbsSlice.reducer;\n\n// let letMeFoldBelow\n\n// import { createSlice } from '@reduxjs/toolkit';\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// Slice Object\n///////////////////////////////////////\n// export const favoriteRecipesSlice = createSlice({\n//   name: \"favoriteRecipes\",\n//   initialState: [],\n//   reducers: {\n//     addRecipe: (state, action) => {\n//       state.push(action.payload);\n//     },\n//     removeRecipe: (state, action) => {\n//       return state.filter(recipe => recipe.id !== action.payload.id)\n//     },\n//   },\n// });\n\n// Selectors\n///////////////////////////////////////\n// export const selectFavoriteRecipes = (state) => state.favoriteRecipes;\n\n// export const selectFilteredFavoriteRecipes = (state) => {\n//   const favoriteRecipes = selectFavoriteRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return favoriteRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };\n\n// Exports\n///////////////////////////////////////\n// export const {\n//    addRecipe,\n//    removeRecipe,\n// } = favoriteRecipesSlice.actions;\n\n// export default favoriteRecipesSlice.reducer;\n\n// import allRecipesData from '../../data.js'\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// export const loadData = () => {\n//   return {\n//     type: 'allRecipes/loadData',\n//     payload: allRecipesData\n//   }\n// }\n\n// const initialState = [];\n// export const allRecipesReducer = (allRecipes = initialState, action) => {\n//   switch (action.type) {\n//     case 'allRecipes/loadData':\n//       return action.payload;\n//     case 'favoriteRecipes/addRecipe':\n//       return allRecipes.filter(recipe => recipe.id !== action.payload.id);\n//     case 'favoriteRecipes/removeRecipe':\n//       return [...allRecipes, action.payload]\n//     default:\n//       return allRecipes;\n//   }\n// }\n\n// export const selectAllRecipes = (state) => state.allRecipes;\n\n// export const selectFilteredAllRecipes = (state) => {\n//   const allRecipes = selectAllRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return allRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };","map":{"version":3,"names":["createSlice","verbsSlice","name","initialState","allVerbs","tenseSelection","reducers","loadData","state","action","payload","selectTense","selectFilteredAllVerbs","verbs","allTense","filteredVerbs","verb","isIncluded","includes","tense","actions","reducer"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/app/verbsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const verbsSlice = createSlice({\n   name: 'verbs',\n   initialState: {\n    allVerbs: {},\n    tenseSelection: [],\n    // filteredVerbs: {},\n   },\n   reducers: {\n      loadData: (state, action) => {\n        state.allVerbs = action.payload\n      },\n      selectTense: (state, action) => {\n        state.tenseSelection = action.payload\n      }\n   }\n})\n\n// const selectAllVerbs = (state) => state.verbs.allVerbs;\n// const selectTense = (state) => state.verbs.tenseSelection\n\nexport const selectFilteredAllVerbs = (state) => {\n  const allVerbs = state.verbs.allVerbs;\n  const allTense = state.verbs.tenseSelection\n\n  if (allTense[0] === 'all') return allVerbs\n  else {\n    let filteredVerbs = {}\n    for (let verb in allVerbs) {\n      let isIncluded = allTense.includes(allVerbs[verb].tense)\n      if (isIncluded) filteredVerbs[verb] = allVerbs[verb]\n    }\n    return filteredVerbs\n  }\n  \n  \n  \n \n  \n  // const filter = selectSearchTerm(state);\n\n  // return allRecipes.filter((recipe) =>\n  //   recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n  // );\n};\n\nexport const { loadData, selectTense } = verbsSlice.actions;\n\nexport default verbsSlice.reducer;\n\n// let letMeFoldBelow\n\n\n\n// import { createSlice } from '@reduxjs/toolkit';\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// Slice Object\n///////////////////////////////////////\n// export const favoriteRecipesSlice = createSlice({\n//   name: \"favoriteRecipes\",\n//   initialState: [],\n//   reducers: {\n//     addRecipe: (state, action) => {\n//       state.push(action.payload);\n//     },\n//     removeRecipe: (state, action) => {\n//       return state.filter(recipe => recipe.id !== action.payload.id)\n//     },\n//   },\n// });\n\n\n// Selectors\n///////////////////////////////////////\n// export const selectFavoriteRecipes = (state) => state.favoriteRecipes;\n\n// export const selectFilteredFavoriteRecipes = (state) => {\n//   const favoriteRecipes = selectFavoriteRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return favoriteRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };\n\n// Exports\n///////////////////////////////////////\n// export const {\n//    addRecipe,\n//    removeRecipe,\n// } = favoriteRecipesSlice.actions;\n\n// export default favoriteRecipesSlice.reducer;\n\n// import allRecipesData from '../../data.js'\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// export const loadData = () => {\n//   return {\n//     type: 'allRecipes/loadData',\n//     payload: allRecipesData\n//   }\n// }\n\n\n// const initialState = [];\n// export const allRecipesReducer = (allRecipes = initialState, action) => {\n//   switch (action.type) {\n//     case 'allRecipes/loadData':\n//       return action.payload;\n//     case 'favoriteRecipes/addRecipe':\n//       return allRecipes.filter(recipe => recipe.id !== action.payload.id);\n//     case 'favoriteRecipes/removeRecipe':\n//       return [...allRecipes, action.payload]\n//     default:\n//       return allRecipes;\n//   }\n// }\n\n// export const selectAllRecipes = (state) => state.allRecipes;\n\n// export const selectFilteredAllRecipes = (state) => {\n//   const allRecipes = selectAllRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return allRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACbC,QAAQ,EAAE,CAAC,CAAC;IACZC,cAAc,EAAE;IAChB;EACD,CAAC;EACDC,QAAQ,EAAE;IACPC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACJ,QAAQ,GAAGK,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACH,cAAc,GAAGI,MAAM,CAACC,OAAO;IACvC;EACH;AACH,CAAC,CAAC;;AAEF;AACA;;AAEA,OAAO,MAAME,sBAAsB,GAAIJ,KAAK,IAAK;EAC/C,MAAMJ,QAAQ,GAAGI,KAAK,CAACK,KAAK,CAACT,QAAQ;EACrC,MAAMU,QAAQ,GAAGN,KAAK,CAACK,KAAK,CAACR,cAAc;EAE3C,IAAIS,QAAQ,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,OAAOV,QAAQ,MACrC;IACH,IAAIW,aAAa,GAAG,CAAC,CAAC;IACtB,KAAK,IAAIC,IAAI,IAAIZ,QAAQ,EAAE;MACzB,IAAIa,UAAU,GAAGH,QAAQ,CAACI,QAAQ,CAACd,QAAQ,CAACY,IAAI,CAAC,CAACG,KAAK,CAAC;MACxD,IAAIF,UAAU,EAAEF,aAAa,CAACC,IAAI,CAAC,GAAGZ,QAAQ,CAACY,IAAI,CAAC;IACtD;IACA,OAAOD,aAAa;EACtB;;EAMA;;EAEA;EACA;EACA;AACF,CAAC;AAED,OAAO,MAAM;EAAER,QAAQ;EAAEI;AAAY,CAAC,GAAGV,UAAU,CAACmB,OAAO;AAE3D,eAAenB,UAAU,CAACoB,OAAO;;AAEjC;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}