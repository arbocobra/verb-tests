{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredVerbs } from './../app/verbsSlice';\nimport _ from 'lodash';\nimport { loadTest } from '../app/testSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = props => {\n  _s();\n  // const { selectFilteredVerbs } = props\n  const dispatch = useDispatch();\n  const filteredVerbs = useSelector(selectFilteredVerbs);\n  const shuffledIds = dispatch(shuffleVerbIds);\n  const isFirstRender = useRef(true);\n  const onFirstRender = () => isFirstRender.current = false;\n  useEffect(() => onFirstRender, []);\n  const shuffleVerbIds = () => {\n    if (!_.isEmpty(filteredVerbs)) {\n      console.log(filteredVerbs);\n      let result = [];\n      for (let verb in filteredVerbs) {\n        result.push(filteredVerbs[verb].id);\n      }\n      return result;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_s(Test, \"8Q+H3XiY7I4OpOgIiZ1nYRiVEKU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","selectFilteredVerbs","_","loadTest","jsxDEV","_jsxDEV","Test","props","_s","dispatch","filteredVerbs","shuffledIds","shuffleVerbIds","isFirstRender","onFirstRender","current","isEmpty","console","log","result","verb","push","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Test.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredVerbs } from './../app/verbsSlice'\nimport _ from 'lodash'\n\nimport { loadTest } from '../app/testSlice';\n\nconst Test = (props) => {\n   // const { selectFilteredVerbs } = props\n   const dispatch = useDispatch();\n   const filteredVerbs = useSelector(selectFilteredVerbs)\n   const shuffledIds = dispatch(shuffleVerbIds)\n   \n\n   const isFirstRender = useRef(true)\n   const onFirstRender = () => isFirstRender.current = false\n\n\n \n   useEffect(() => onFirstRender, []);\n\n   const shuffleVerbIds = () => {\n      if (!_.isEmpty(filteredVerbs)) {\n         console.log(filteredVerbs)\n         let result = []\n         for (let verb in filteredVerbs) {\n            result.push(filteredVerbs[verb].id)\n         }\n         return result\n      }\n         \n   }\n\n\n   return (\n      <div></div>\n   )\n}\n\nexport default Test"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB;EACA,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,aAAa,GAAGX,WAAW,CAACE,mBAAmB,CAAC;EACtD,MAAMU,WAAW,GAAGF,QAAQ,CAACG,cAAc,CAAC;EAG5C,MAAMC,aAAa,GAAGf,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMgB,aAAa,GAAGA,CAAA,KAAMD,aAAa,CAACE,OAAO,GAAG,KAAK;EAIzDlB,SAAS,CAAC,MAAMiB,aAAa,EAAE,EAAE,CAAC;EAElC,MAAMF,cAAc,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACV,CAAC,CAACc,OAAO,CAACN,aAAa,CAAC,EAAE;MAC5BO,OAAO,CAACC,GAAG,CAACR,aAAa,CAAC;MAC1B,IAAIS,MAAM,GAAG,EAAE;MACf,KAAK,IAAIC,IAAI,IAAIV,aAAa,EAAE;QAC7BS,MAAM,CAACE,IAAI,CAACX,aAAa,CAACU,IAAI,CAAC,CAACE,EAAE,CAAC;MACtC;MACA,OAAOH,MAAM;IAChB;EAEH,CAAC;EAGD,oBACGd,OAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAEjB,CAAC;AAAAlB,EAAA,CA9BKF,IAAI;EAAA,QAEUN,WAAW,EACND,WAAW;AAAA;AAAA4B,EAAA,GAH9BrB,IAAI;AAgCV,eAAeA,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}