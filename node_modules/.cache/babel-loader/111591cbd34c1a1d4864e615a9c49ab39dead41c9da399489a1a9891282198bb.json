{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport createVerbObject from '../functions/loadingFunctions';\n// import data verb object\n// import filter selection (import selectsearchterm)\n\nconst initializeState = () => createVerbObject();\nexport const allVerbsSlice = createSlice({\n  name: 'allVerbs',\n  initialState: {\n    allVerbs: {},\n    filterSelection: ''\n  },\n  reducers: {\n    loadData: (state, action) => {\n      state.allVerbs = initializeState();\n    }\n  }\n});\nexport const selectAllVerbs = state => state.allVerbs;\nexport const selectFilteredAllVerbs = state => {\n  const allVerbs = selectAllVerbs(state);\n  return allVerbs;\n  // const filter = selectSearchTerm(state);\n\n  // return allRecipes.filter((recipe) =>\n  //   recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n  // );\n};\nexport const {\n  loadData\n} = allVerbsSlice.actions;\nexport default allVerbsSlice.reducer;\n\n// let letMeFoldBelow\n\n// import { createSlice } from '@reduxjs/toolkit';\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// Slice Object\n///////////////////////////////////////\n// export const favoriteRecipesSlice = createSlice({\n//   name: \"favoriteRecipes\",\n//   initialState: [],\n//   reducers: {\n//     addRecipe: (state, action) => {\n//       state.push(action.payload);\n//     },\n//     removeRecipe: (state, action) => {\n//       return state.filter(recipe => recipe.id !== action.payload.id)\n//     },\n//   },\n// });\n\n// Selectors\n///////////////////////////////////////\n// export const selectFavoriteRecipes = (state) => state.favoriteRecipes;\n\n// export const selectFilteredFavoriteRecipes = (state) => {\n//   const favoriteRecipes = selectFavoriteRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return favoriteRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };\n\n// Exports\n///////////////////////////////////////\n// export const {\n//    addRecipe,\n//    removeRecipe,\n// } = favoriteRecipesSlice.actions;\n\n// export default favoriteRecipesSlice.reducer;\n\n// import allRecipesData from '../../data.js'\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// export const loadData = () => {\n//   return {\n//     type: 'allRecipes/loadData',\n//     payload: allRecipesData\n//   }\n// }\n\n// const initialState = [];\n// export const allRecipesReducer = (allRecipes = initialState, action) => {\n//   switch (action.type) {\n//     case 'allRecipes/loadData':\n//       return action.payload;\n//     case 'favoriteRecipes/addRecipe':\n//       return allRecipes.filter(recipe => recipe.id !== action.payload.id);\n//     case 'favoriteRecipes/removeRecipe':\n//       return [...allRecipes, action.payload]\n//     default:\n//       return allRecipes;\n//   }\n// }\n\n// export const selectAllRecipes = (state) => state.allRecipes;\n\n// export const selectFilteredAllRecipes = (state) => {\n//   const allRecipes = selectAllRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return allRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };","map":{"version":3,"names":["createSlice","createVerbObject","initializeState","allVerbsSlice","name","initialState","allVerbs","filterSelection","reducers","loadData","state","action","selectAllVerbs","selectFilteredAllVerbs","actions","reducer"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/app/allVerbsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport createVerbObject from '../functions/loadingFunctions';\n// import data verb object\n// import filter selection (import selectsearchterm)\n\nconst initializeState = () => createVerbObject()\n\nexport const allVerbsSlice = createSlice({\n   name: 'allVerbs',\n   initialState: {\n    allVerbs: {},\n    filterSelection: '',\n   },\n   reducers: {\n      loadData: (state, action) => {\n         state.allVerbs = initializeState()\n      }\n   }\n})\n\nexport const selectAllVerbs = (state) => state.allVerbs;\n\nexport const selectFilteredAllVerbs = (state) => {\n  const allVerbs = selectAllVerbs(state);\n  return allVerbs\n  // const filter = selectSearchTerm(state);\n\n  // return allRecipes.filter((recipe) =>\n  //   recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n  // );\n};\n\nexport const { loadData } = allVerbsSlice.actions;\n\nexport default allVerbsSlice.reducer;\n\n// let letMeFoldBelow\n\n\n\n// import { createSlice } from '@reduxjs/toolkit';\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// Slice Object\n///////////////////////////////////////\n// export const favoriteRecipesSlice = createSlice({\n//   name: \"favoriteRecipes\",\n//   initialState: [],\n//   reducers: {\n//     addRecipe: (state, action) => {\n//       state.push(action.payload);\n//     },\n//     removeRecipe: (state, action) => {\n//       return state.filter(recipe => recipe.id !== action.payload.id)\n//     },\n//   },\n// });\n\n\n// Selectors\n///////////////////////////////////////\n// export const selectFavoriteRecipes = (state) => state.favoriteRecipes;\n\n// export const selectFilteredFavoriteRecipes = (state) => {\n//   const favoriteRecipes = selectFavoriteRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return favoriteRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };\n\n// Exports\n///////////////////////////////////////\n// export const {\n//    addRecipe,\n//    removeRecipe,\n// } = favoriteRecipesSlice.actions;\n\n// export default favoriteRecipesSlice.reducer;\n\n// import allRecipesData from '../../data.js'\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// export const loadData = () => {\n//   return {\n//     type: 'allRecipes/loadData',\n//     payload: allRecipesData\n//   }\n// }\n\n\n// const initialState = [];\n// export const allRecipesReducer = (allRecipes = initialState, action) => {\n//   switch (action.type) {\n//     case 'allRecipes/loadData':\n//       return action.payload;\n//     case 'favoriteRecipes/addRecipe':\n//       return allRecipes.filter(recipe => recipe.id !== action.payload.id);\n//     case 'favoriteRecipes/removeRecipe':\n//       return [...allRecipes, action.payload]\n//     default:\n//       return allRecipes;\n//   }\n// }\n\n// export const selectAllRecipes = (state) => state.allRecipes;\n\n// export const selectFilteredAllRecipes = (state) => {\n//   const allRecipes = selectAllRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return allRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D;AACA;;AAEA,MAAMC,eAAe,GAAGA,CAAA,KAAMD,gBAAgB,CAAC,CAAC;AAEhD,OAAO,MAAME,aAAa,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACbC,QAAQ,EAAE,CAAC,CAAC;IACZC,eAAe,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACPC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACJ,QAAQ,GAAGJ,eAAe,CAAC,CAAC;IACrC;EACH;AACH,CAAC,CAAC;AAEF,OAAO,MAAMU,cAAc,GAAIF,KAAK,IAAKA,KAAK,CAACJ,QAAQ;AAEvD,OAAO,MAAMO,sBAAsB,GAAIH,KAAK,IAAK;EAC/C,MAAMJ,QAAQ,GAAGM,cAAc,CAACF,KAAK,CAAC;EACtC,OAAOJ,QAAQ;EACf;;EAEA;EACA;EACA;AACF,CAAC;AAED,OAAO,MAAM;EAAEG;AAAS,CAAC,GAAGN,aAAa,CAACW,OAAO;AAEjD,eAAeX,aAAa,CAACY,OAAO;;AAEpC;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}