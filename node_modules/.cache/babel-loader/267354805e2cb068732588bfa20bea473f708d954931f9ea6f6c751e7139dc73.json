{"ast":null,"code":"import hints from './../data/hints';\nexport const tallyResponse = state => {\n  console.log(state);\n};\nexport const checkAnswer = (submitted, correct) => {\n  if (submitted === correct) return 0;else {\n    const normalizeSubmit = removeDiacritics(submitted);\n    const normalizeCorrect = removeDiacritics(correct);\n    if (normalizeSubmit === normalizeCorrect) return 1;else return 2;\n  }\n};\nconst removeDiacritics = str => {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n};\nexport const pullHints = verb => {};","map":{"version":3,"names":["hints","tallyResponse","state","console","log","checkAnswer","submitted","correct","normalizeSubmit","removeDiacritics","normalizeCorrect","str","normalize","replace","pullHints","verb"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/functions/questionFunctions.js"],"sourcesContent":["import hints from './../data/hints'\n\nexport const tallyResponse = (state) => {\n  console.log(state)\n}\n\nexport const checkAnswer = (submitted, correct) => {\n  if (submitted === correct) return 0\n  else {\n    const normalizeSubmit = removeDiacritics(submitted)\n    const normalizeCorrect = removeDiacritics(correct)\n    if (normalizeSubmit === normalizeCorrect) return 1\n    else return 2\n  }\n}\n\nconst removeDiacritics = str => {\n  return str\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '');\n}\n\nexport const pullHints = (verb) => {\n  \n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACtCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;AACpB,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;EACjD,IAAID,SAAS,KAAKC,OAAO,EAAE,OAAO,CAAC,MAC9B;IACH,MAAMC,eAAe,GAAGC,gBAAgB,CAACH,SAAS,CAAC;IACnD,MAAMI,gBAAgB,GAAGD,gBAAgB,CAACF,OAAO,CAAC;IAClD,IAAIC,eAAe,KAAKE,gBAAgB,EAAE,OAAO,CAAC,MAC7C,OAAO,CAAC;EACf;AACF,CAAC;AAED,MAAMD,gBAAgB,GAAGE,GAAG,IAAI;EAC9B,OAAOA,GAAG,CACPC,SAAS,CAAC,KAAK,CAAC,CAChBC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;AACpC,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIC,IAAI,IAAK,CAEnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}