{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Verbs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport { loadData, selectFilteredAllVerbs } from '../app/verbsSlice';\nimport createVerbObject from '../functions/loadingFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verbs = () => {\n  _s();\n  const allVerbs = useSelector(selectFilteredAllVerbs);\n  const dispatch = useDispatch();\n  const tenseSelection = useRef(['present', 'past', 'present continuous', 'past continuous', 'present perfect', 'past perfect', 'future perfect', 'imperfect', 'imperative']);\n  const onFirstRender = () => {\n    dispatch(loadData(createVerbObject()));\n  };\n  useEffect(onFirstRender, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello there!\", /*#__PURE__*/_jsxDEV(\"form\", {\n      children: tenseSelection.current.map((tense, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `tense${i}`,\n          value: tense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: `tense${i}`,\n          children: [\" \", _.upperFirst(tense)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(Verbs, \"4ZWYdtd1XfFoK9u6PMNu7ilYKHY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Verbs;\nexport default Verbs;\nvar _c;\n$RefreshReg$(_c, \"Verbs\");","map":{"version":3,"names":["React","useEffect","useRef","useSelector","useDispatch","_","loadData","selectFilteredAllVerbs","createVerbObject","jsxDEV","_jsxDEV","Verbs","_s","allVerbs","dispatch","tenseSelection","onFirstRender","children","current","map","tense","i","type","id","value","fileName","_jsxFileName","lineNumber","columnNumber","for","upperFirst","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Verbs.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash'\n\nimport { loadData, selectFilteredAllVerbs } from '../app/verbsSlice';\n\nimport createVerbObject from '../functions/loadingFunctions';\n\nconst Verbs = () => {\n\n   const allVerbs = useSelector(selectFilteredAllVerbs);\n   const dispatch = useDispatch();\n\n   const tenseSelection = useRef(['present', 'past', 'present continuous', 'past continuous', 'present perfect', 'past perfect', 'future perfect', 'imperfect', 'imperative'])\n \n   const onFirstRender = () => {\n     dispatch(loadData(createVerbObject()));\n   }\n   useEffect(onFirstRender, []);\n\n   return (\n      <div>\n         Hello there!\n         <form>\n            {tenseSelection.current.map((tense, i) => (\n               <div>\n                  <input type='checkbox' id={`tense${i}`} value={tense} />\n                  <label for={`tense${i}`}> {_.upperFirst(tense)}</label>\n               </div>\n            ))}\n            {/* <input type='checkbox' id='tense1' value='present' />\n            <label for='tense1'> Present</label> */}\n         </form>\n         {/* {Object.keys(allVerbs).map(el => (<p>{el}</p>))} */}\n      </div>\n   )\n}\n\nexport default Verbs"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,SAASC,QAAQ,EAAEC,sBAAsB,QAAQ,mBAAmB;AAEpE,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGV,WAAW,CAACI,sBAAsB,CAAC;EACpD,MAAMO,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,cAAc,GAAGb,MAAM,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,cAAc,EAAE,gBAAgB,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;EAE3K,MAAMc,aAAa,GAAGA,CAAA,KAAM;IAC1BF,QAAQ,CAACR,QAAQ,CAACE,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EACDP,SAAS,CAACe,aAAa,EAAE,EAAE,CAAC;EAE5B,oBACGN,OAAA;IAAAO,QAAA,GAAK,cAEF,eAAAP,OAAA;MAAAO,QAAA,EACIF,cAAc,CAACG,OAAO,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBAClCX,OAAA;QAAAO,QAAA,gBACGP,OAAA;UAAOY,IAAI,EAAC,UAAU;UAACC,EAAE,EAAE,QAAQF,CAAC,EAAG;UAACG,KAAK,EAAEJ;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDlB,OAAA;UAAOmB,GAAG,EAAE,QAAQR,CAAC,EAAG;UAAAJ,QAAA,GAAC,GAAC,EAACZ,CAAC,CAACyB,UAAU,CAACV,KAAK,CAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEZ,CAAC;AAAAhB,EAAA,CA5BKD,KAAK;EAAA,QAESR,WAAW,EACXC,WAAW;AAAA;AAAA2B,EAAA,GAHzBpB,KAAK;AA8BX,eAAeA,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}