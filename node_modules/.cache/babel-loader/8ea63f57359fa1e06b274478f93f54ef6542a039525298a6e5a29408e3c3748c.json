{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/verb-tests/src/components/Selection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport { startTest, selectFilteredAllVerbs } from '../app/verbsSlice';\n\n// import createVerbObject from '../functions/loadingFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Selection = props => {\n  _s();\n  const {\n    updatePage\n  } = props;\n  // const {submitTense, selectedTense, setSelectedTense} = props\n  const [selectedTense, setSelectedTense] = useState(['all']);\n  const [isAll, setIsAll] = useState(true);\n  const [submit, setSubmit] = useState(false);\n  const isFirstRender = useRef(true);\n  const selectButtonRef = useRef(null);\n  const tenseSelection = useRef(['present', 'past', 'present continuous', 'past continuous', 'present perfect', 'past perfect', 'future perfect', 'imperfect', 'imperative']);\n  const onFirstRender = () => {\n    isFirstRender.current = false;\n  };\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //    // let button = document.getElementById('button1')\n  //    selectButtonRef.current.addEventListener('click', submitTense)\n\n  // }, []); \n\n  useEffect(() => selectButtonRef.current.addEventListener('click', submitTense), []);\n  useEffect(() => {\n    if (isAll && !isFirstRender.current) {\n      let divArr = document.getElementsByClassName('auto-checkbox');\n      for (let div of divArr) {\n        div.checked = false;\n      }\n    }\n  }, [isAll]);\n  useEffect(() => {\n    if (submit && !isFirstRender.current) {\n      dispatch(startTest(selectedTense));\n      updatePage();\n    }\n    onFirstRender();\n  }, [submit]);\n  const checkHandler = e => {\n    let val = e.target.value;\n    let isSelected = e.target.checked;\n    let arr = [...selectedTense];\n    if (val === 'all') {\n      setIsAll(current => !current);\n      if (isSelected) setSelectedTense(['all']);else arr = [...arr].filter(el => el !== 'all');\n    } else {\n      if (isSelected) {\n        arr = [...arr].filter(el => el !== 'all');\n        arr.push(val);\n        setIsAll(false);\n      } else arr = [...arr].filter(el => el !== val);\n      setSelectedTense(arr);\n    }\n  };\n  const submitTense = event => {\n    event.preventDefault();\n    setSubmit(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"selection\",\n    className: \"selection-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-input\",\n      id: \"input-all\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"tense0\",\n        value: \"all\",\n        onChange: checkHandler,\n        checked: isAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tense0\",\n        children: \" All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), tenseSelection.current.map((tense, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `input-${_.kebabCase(tense)}`,\n      className: \"selection-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"tense-checkbox, auto-checkbox\",\n        type: \"checkbox\",\n        id: `tense${i + 1}`,\n        value: tense,\n        onChange: checkHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `tense${i}`,\n        children: [\" \", _.upperFirst(tense)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }, this)]\n    }, `checkbox${i}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: selectButtonRef,\n      className: \"button\",\n      children: \"Begin Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n_s(Selection, \"JgV+sVyTs03aIrsWwXJ+1p4k4w8=\", false, function () {\n  return [useDispatch];\n});\n_c = Selection;\nexport default Selection;\nvar _c;\n$RefreshReg$(_c, \"Selection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","_","startTest","selectFilteredAllVerbs","jsxDEV","_jsxDEV","Selection","props","_s","updatePage","selectedTense","setSelectedTense","isAll","setIsAll","submit","setSubmit","isFirstRender","selectButtonRef","tenseSelection","onFirstRender","current","dispatch","addEventListener","submitTense","divArr","document","getElementsByClassName","div","checked","checkHandler","e","val","target","value","isSelected","arr","filter","el","push","event","preventDefault","id","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","map","tense","i","kebabCase","upperFirst","ref","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/verb-tests/src/components/Selection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash'\n\nimport { startTest, selectFilteredAllVerbs } from '../app/verbsSlice';\n\n// import createVerbObject from '../functions/loadingFunctions';\n\nconst Selection = (props) => {\n   const {updatePage} = props\n   // const {submitTense, selectedTense, setSelectedTense} = props\n   const [selectedTense, setSelectedTense] = useState(['all'])\n   const [isAll, setIsAll] = useState(true)\n   const [submit, setSubmit] = useState(false)\n\n   const isFirstRender = useRef(true)\n   const selectButtonRef = useRef(null)\n   const tenseSelection = useRef(['present', 'past', 'present continuous', 'past continuous', 'present perfect', 'past perfect', 'future perfect', 'imperfect', 'imperative'])\n\n   \n   const onFirstRender = () => {\n      isFirstRender.current = false\n   }\n\n   const dispatch = useDispatch()\n\n   // useEffect(() => {\n   //    // let button = document.getElementById('button1')\n   //    selectButtonRef.current.addEventListener('click', submitTense)\n      \n   // }, []); \n\n   useEffect(() => selectButtonRef.current.addEventListener('click', submitTense), []);\n\n   useEffect(() => {\n      if (isAll && !isFirstRender.current) {\n         let divArr = document.getElementsByClassName('auto-checkbox')\n         for (let div of divArr) {\n            div.checked = false\n         }\n      }\n   }, [isAll])\n\n   useEffect(() => {\n      if (submit && !isFirstRender.current) {\n         dispatch(startTest(selectedTense))\n         updatePage()\n      }\n      onFirstRender()\n      }, [submit])\n   \n\n   const checkHandler = (e) => {\n      let val = e.target.value\n      let isSelected = e.target.checked\n      let arr = [...selectedTense]\n\n      if (val === 'all') {\n         setIsAll(current => !current)\n         if (isSelected) setSelectedTense(['all'])\n         else arr = [...arr].filter(el => el !== 'all')         \n      } else {\n         if (isSelected) {\n            arr = [...arr].filter(el => el !== 'all')\n            arr.push(val)\n            setIsAll(false)\n         } else arr = [...arr].filter(el => el !== val)\n         setSelectedTense(arr)\n      }\n   }\n\n   const submitTense = (event) => {\n      event.preventDefault()\n      setSubmit(true)\n   }\n\n   return (\n      <div id='selection' className='selection-container'>\n         {/* <form> */}\n            <div className='selection-input' id='input-all'>\n               <input type='checkbox' id='tense0' value='all' onChange={checkHandler} checked={isAll} />\n               <label htmlFor='tense0'> All</label>\n            </div>\n            {tenseSelection.current.map((tense, i) => (\n               <div id={`input-${_.kebabCase(tense)}`} className='selection-input' key={`checkbox${i}`}>\n                  <input className='tense-checkbox, auto-checkbox' type='checkbox' id={`tense${i + 1}`} value={tense} onChange={checkHandler} />\n                  <label htmlFor={`tense${i}`}> {_.upperFirst(tense)}</label>\n               </div>\n            ))}\n            <div ref={selectButtonRef} className='button'>Begin Game</div>\n      </div>\n   )\n}\n\nexport default Selection"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,SAASC,SAAS,EAAEC,sBAAsB,QAAQ,mBAAmB;;AAErE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM;IAACC;EAAU,CAAC,GAAGF,KAAK;EAC1B;EACA,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;EAC3D,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMoB,aAAa,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMmB,eAAe,GAAGnB,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMoB,cAAc,GAAGpB,MAAM,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,cAAc,EAAE,gBAAgB,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;EAG3K,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IACzBH,aAAa,CAACI,OAAO,GAAG,KAAK;EAChC,CAAC;EAED,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;;EAEA;;EAEAH,SAAS,CAAC,MAAMoB,eAAe,CAACG,OAAO,CAACE,gBAAgB,CAAC,OAAO,EAAEC,WAAW,CAAC,EAAE,EAAE,CAAC;EAEnF1B,SAAS,CAAC,MAAM;IACb,IAAIe,KAAK,IAAI,CAACI,aAAa,CAACI,OAAO,EAAE;MAClC,IAAII,MAAM,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,eAAe,CAAC;MAC7D,KAAK,IAAIC,GAAG,IAAIH,MAAM,EAAE;QACrBG,GAAG,CAACC,OAAO,GAAG,KAAK;MACtB;IACH;EACH,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEXf,SAAS,CAAC,MAAM;IACb,IAAIiB,MAAM,IAAI,CAACE,aAAa,CAACI,OAAO,EAAE;MACnCC,QAAQ,CAACnB,SAAS,CAACQ,aAAa,CAAC,CAAC;MAClCD,UAAU,CAAC,CAAC;IACf;IACAU,aAAa,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAGf,MAAMe,YAAY,GAAIC,CAAC,IAAK;IACzB,IAAIC,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACxB,IAAIC,UAAU,GAAGJ,CAAC,CAACE,MAAM,CAACJ,OAAO;IACjC,IAAIO,GAAG,GAAG,CAAC,GAAGzB,aAAa,CAAC;IAE5B,IAAIqB,GAAG,KAAK,KAAK,EAAE;MAChBlB,QAAQ,CAACO,OAAO,IAAI,CAACA,OAAO,CAAC;MAC7B,IAAIc,UAAU,EAAEvB,gBAAgB,CAAC,CAAC,KAAK,CAAC,CAAC,MACpCwB,GAAG,GAAG,CAAC,GAAGA,GAAG,CAAC,CAACC,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAK,KAAK,CAAC;IACjD,CAAC,MAAM;MACJ,IAAIH,UAAU,EAAE;QACbC,GAAG,GAAG,CAAC,GAAGA,GAAG,CAAC,CAACC,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAK,KAAK,CAAC;QACzCF,GAAG,CAACG,IAAI,CAACP,GAAG,CAAC;QACblB,QAAQ,CAAC,KAAK,CAAC;MAClB,CAAC,MAAMsB,GAAG,GAAG,CAAC,GAAGA,GAAG,CAAC,CAACC,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKN,GAAG,CAAC;MAC9CpB,gBAAgB,CAACwB,GAAG,CAAC;IACxB;EACH,CAAC;EAED,MAAMZ,WAAW,GAAIgB,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBzB,SAAS,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACGV,OAAA;IAAKoC,EAAE,EAAC,WAAW;IAACC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAE7CtC,OAAA;MAAKqC,SAAS,EAAC,iBAAiB;MAACD,EAAE,EAAC,WAAW;MAAAE,QAAA,gBAC5CtC,OAAA;QAAOuC,IAAI,EAAC,UAAU;QAACH,EAAE,EAAC,QAAQ;QAACR,KAAK,EAAC,KAAK;QAACY,QAAQ,EAAEhB,YAAa;QAACD,OAAO,EAAEhB;MAAM;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzF5C,OAAA;QAAO6C,OAAO,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACL/B,cAAc,CAACE,OAAO,CAAC+B,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBAClChD,OAAA;MAAKoC,EAAE,EAAE,SAASxC,CAAC,CAACqD,SAAS,CAACF,KAAK,CAAC,EAAG;MAACV,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAChEtC,OAAA;QAAOqC,SAAS,EAAC,+BAA+B;QAACE,IAAI,EAAC,UAAU;QAACH,EAAE,EAAE,QAAQY,CAAC,GAAG,CAAC,EAAG;QAACpB,KAAK,EAAEmB,KAAM;QAACP,QAAQ,EAAEhB;MAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9H5C,OAAA;QAAO6C,OAAO,EAAE,QAAQG,CAAC,EAAG;QAAAV,QAAA,GAAC,GAAC,EAAC1C,CAAC,CAACsD,UAAU,CAACH,KAAK,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAFW,WAAWI,CAAC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGlF,CACP,CAAC,eACF5C,OAAA;MAAKmD,GAAG,EAAEvC,eAAgB;MAACyB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEZ,CAAC;AAAAzC,EAAA,CApFKF,SAAS;EAAA,QAgBKN,WAAW;AAAA;AAAAyD,EAAA,GAhBzBnD,SAAS;AAsFf,eAAeA,SAAS;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}