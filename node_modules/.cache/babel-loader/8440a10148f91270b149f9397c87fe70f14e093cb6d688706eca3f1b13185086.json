{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Verbs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startTest } from '../app/verbsSlice';\nimport Selection from './Selection';\nimport Test from './Test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verbs = () => {\n  _s();\n  const dispatch = useDispatch();\n  // const [selectedTense, setSelectedTense] = useState(['all'])\n  // const selectedTenseRef = useRef()\n  const [displayQuestion, setDisplayQuestion] = useState(false);\n  const isFirstRender = useRef(true);\n  const onFirstRender = () => isFirstRender.current = false;\n  useEffect(() => onFirstRender, []);\n  const updatePage = () => {\n    document.getElementById('selection').classList.add('hidden');\n    setDisplayQuestion(true);\n  };\n\n  // const submitTense = () => {\n  //    selectedTenseRef.current = selectedTense\n  //    dispatch(startTest(selectedTenseRef.current))\n  //    document.getElementById('selection').classList.add('hidden')\n  //    setDisplayQuestion(true)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"verbs\",\n    children: [/*#__PURE__*/_jsxDEV(Selection, {\n      updatePage: updatePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Test, {\n      displayQuestion: displayQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(Verbs, \"2Wm76PqdzLCqkrcLoSyZDxwOqJ8=\", false, function () {\n  return [useDispatch];\n});\n_c = Verbs;\nexport default Verbs;\nvar _c;\n$RefreshReg$(_c, \"Verbs\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","startTest","Selection","Test","jsxDEV","_jsxDEV","Verbs","_s","dispatch","displayQuestion","setDisplayQuestion","isFirstRender","onFirstRender","current","updatePage","document","getElementById","classList","add","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Verbs.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { startTest } from '../app/verbsSlice';\n\nimport Selection from './Selection';\nimport Test from './Test';\n\nconst Verbs = () => {\n   const dispatch = useDispatch();\n   // const [selectedTense, setSelectedTense] = useState(['all'])\n   // const selectedTenseRef = useRef()\n   const [displayQuestion, setDisplayQuestion] = useState(false)\n\n   const isFirstRender = useRef(true)\n   const onFirstRender = () => isFirstRender.current = false\n   \n   useEffect(() => onFirstRender, []);\n\n   const updatePage = () => {\n      document.getElementById('selection').classList.add('hidden')\n      setDisplayQuestion(true)\n   }\n\n   // const submitTense = () => {\n   //    selectedTenseRef.current = selectedTense\n   //    dispatch(startTest(selectedTenseRef.current))\n   //    document.getElementById('selection').classList.add('hidden')\n   //    setDisplayQuestion(true)\n   // }\n\n   return (\n      <div id='verbs'>\n         {/* Hello there! */}\n         {/* <Selection submitTense={submitTense} selectedTense={selectedTense} setSelectedTense={setSelectedTense} /> */}\n         <Selection updatePage={updatePage} />\n         <Test displayQuestion={displayQuestion}  />\n      </div>\n   )\n}\n\nexport default Verbs"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,SAAS,QAAQ,mBAAmB;AAE7C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B;EACA;EACA,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMe,aAAa,GAAGb,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMc,aAAa,GAAGA,CAAA,KAAMD,aAAa,CAACE,OAAO,GAAG,KAAK;EAEzDhB,SAAS,CAAC,MAAMe,aAAa,EAAE,EAAE,CAAC;EAElC,MAAME,UAAU,GAAGA,CAAA,KAAM;IACtBC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAC5DR,kBAAkB,CAAC,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACGL,OAAA;IAAKc,EAAE,EAAC,OAAO;IAAAC,QAAA,gBAGZf,OAAA,CAACH,SAAS;MAACY,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCnB,OAAA,CAACF,IAAI;MAACM,eAAe,EAAEA;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEZ,CAAC;AAAAjB,EAAA,CA/BKD,KAAK;EAAA,QACSN,WAAW;AAAA;AAAAyB,EAAA,GADzBnB,KAAK;AAiCX,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}