{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createVerbObject, filterSelectedVerbTense, shuffleVerbIds } from '../functions/loadingFunctions';\nexport const verbsSlice = createSlice({\n  name: 'verbs',\n  initialState: {\n    isActive: false,\n    filteredVerbs: [],\n    tenseSelection: [],\n    questions: {\n      current: null,\n      shuffledIds: [],\n      correctAnswers: [],\n      incorrectAnswers: []\n    }\n  },\n  reducers: {\n    startTest: (state, action) => {\n      let filters = action.payload;\n      let allVerbs = createVerbObject();\n      let filteredVerbs = filterSelectedVerbTense(filters, allVerbs);\n      let shuffledIds = shuffleVerbIds(filteredVerbs);\n      state.tenseSelection = action.payload;\n      state.filteredVerbs = filteredVerbs;\n      state.questions.shuffledIds = shuffledIds;\n      state.isActive = true;\n    },\n    setQuestion: (state, action) => {\n      let questionId = action.payload;\n      state.questions.current = questionId;\n    },\n    addCorrect: (state, action) => {\n      state.questions.correctAnswers.push(action.payload);\n    },\n    addIncorrect: (state, action) => {\n      state.questions.incorrectAnswers.push(action.payload);\n    },\n    endTest: state => state.isActive = false\n  }\n});\nexport const selectFilteredVerbs = state => {\n  const result = state.verbs.filteredVerbs;\n  console.log(`selectFilteredVerbs: ${result}`);\n  return result;\n};\nexport const selectShuffledIds = state => {\n  const result = state.verbs.questions.shuffledIds;\n  console.log(`selectShuffledIds: ${result}`);\n  return result;\n  // return state.verbs.questions.shuffledIds\n};\nexport const selectNextQuestion = state => {};\nexport const selectResultTally = state => {\n  let correctAnswers = state.verbs.questions.correctAnswers.length;\n  let incorrectAnswers = state.verbs.questions.incorrectAnswers.length;\n  let totalQuestions = state.verbs.questions.shuffledIds.length;\n  if (correctAnswers + incorrectAnswers === totalQuestions - 1) return true;else return false;\n};\nexport const selectFinalResults = state => {\n  let incorrectIds = state.verbs.questions.incorrectAnswers;\n  let allVerbs = state.verbs.filteredVerbs;\n  // if (state.isActive) return null;\n  // else {\n  const incorrectAnswers = incorrectIds.map(num => {\n    let verb = allVerbs.find(el => el.id === num);\n    return verb.fullP;\n  });\n  return incorrectAnswers;\n  // }\n};\nexport const {\n  startTest,\n  setQuestion,\n  addCorrect,\n  addIncorrect\n} = verbsSlice.actions;\nexport default verbsSlice.reducer;","map":{"version":3,"names":["createSlice","createVerbObject","filterSelectedVerbTense","shuffleVerbIds","verbsSlice","name","initialState","isActive","filteredVerbs","tenseSelection","questions","current","shuffledIds","correctAnswers","incorrectAnswers","reducers","startTest","state","action","filters","payload","allVerbs","setQuestion","questionId","addCorrect","push","addIncorrect","endTest","selectFilteredVerbs","result","verbs","console","log","selectShuffledIds","selectNextQuestion","selectResultTally","length","totalQuestions","selectFinalResults","incorrectIds","map","num","verb","find","el","id","fullP","actions","reducer"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/app/verbsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { createVerbObject, filterSelectedVerbTense, shuffleVerbIds } from '../functions/loadingFunctions';\n\nexport const verbsSlice = createSlice({\n   name: 'verbs',\n   initialState: {\n    isActive: false,\n    filteredVerbs: [],\n    tenseSelection: [],\n    questions: {\n      current: null,\n      shuffledIds: [],\n      correctAnswers: [],\n      incorrectAnswers: []\n    }\n   },\n   reducers: {\n      startTest: (state, action) => {\n        let filters = action.payload\n        let allVerbs = createVerbObject()\n        let filteredVerbs = filterSelectedVerbTense(filters, allVerbs)\n        let shuffledIds = shuffleVerbIds(filteredVerbs)\n\n        state.tenseSelection = action.payload\n        state.filteredVerbs = filteredVerbs\n        state.questions.shuffledIds = shuffledIds\n        state.isActive = true\n      },\n      setQuestion: (state, action) => {\n        let questionId = action.payload\n        state.questions.current = questionId\n      },\n      addCorrect: (state, action) => {\n        state.questions.correctAnswers.push(action.payload)\n      },\n      addIncorrect: (state, action) => {\n        state.questions.incorrectAnswers.push(action.payload)\n      },\n      endTest: (state) => state.isActive = false,\n   }\n})\n\nexport const selectFilteredVerbs = (state) => {\n  const result = state.verbs.filteredVerbs\n  console.log(`selectFilteredVerbs: ${result}`)\n  return result\n}\n\nexport const selectShuffledIds = (state) => {\n  const result = state.verbs.questions.shuffledIds\n  console.log(`selectShuffledIds: ${result}`)\n  return result\n  // return state.verbs.questions.shuffledIds\n}\n\nexport const selectNextQuestion = (state) => {}\n\nexport const selectResultTally = (state) => {\n  let correctAnswers = state.verbs.questions.correctAnswers.length\n  let incorrectAnswers = state.verbs.questions.incorrectAnswers.length\n  let totalQuestions = state.verbs.questions.shuffledIds.length\n  if ((correctAnswers + incorrectAnswers) === totalQuestions - 1) return true\n  else return false\n}\n\nexport const selectFinalResults = (state) => {\n  let incorrectIds = state.verbs.questions.incorrectAnswers;\n  let allVerbs = state.verbs.filteredVerbs\n  // if (state.isActive) return null;\n  // else {\n    const incorrectAnswers = incorrectIds.map(num => {\n      let verb = allVerbs.find(el => el.id === num)\n      return verb.fullP\n    })\n    return incorrectAnswers\n  // }\n}\n\nexport const { startTest, setQuestion, addCorrect, addIncorrect } = verbsSlice.actions;\n\nexport default verbsSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}