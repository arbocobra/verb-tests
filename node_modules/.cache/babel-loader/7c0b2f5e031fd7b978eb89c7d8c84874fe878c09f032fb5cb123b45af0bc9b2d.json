{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createVerbObject, filterSelectedVerbTense, shuffleVerbIds } from '../functions/loadingFunctions';\nexport const verbsSlice = createSlice({\n  name: 'verbs',\n  initialState: {\n    isActive: false,\n    filteredVerbs: [],\n    tenseSelection: [],\n    questions: {\n      shuffledIds: [],\n      correctAnswers: [],\n      incorrectAnswers: []\n    }\n  },\n  reducers: {\n    selectTense: (state, action) => {\n      let filters = action.payload;\n      let allVerbs = createVerbObject();\n      let filteredVerbs = filterSelectedVerbTense(filters, allVerbs);\n      let shuffledIds = shuffleVerbIds(filteredVerbs);\n      state.tenseSelection = action.payload;\n      state.filteredVerbs = filteredVerbs;\n      state.questions.shuffledIds = shuffledIds;\n    },\n    addCorrect: (state, action) => {\n      state.questions.correctAnswers.push(action.payload);\n    },\n    addIncorrect: (state, action) => {\n      state.questions.incorrectAnswers.push(action.payload);\n      // tallyResponse(state)\n    }\n  }\n});\nexport const selectFilteredVerbs = state => state.verbs.filteredVerbs;\nexport const selectShufflesIds = state => {\n  return state.verbs.questions.shuffledIds;\n};\nexport const selectResultTally = state => {\n  let correctAnswers = state.verbs.questions.correctAnswers.length;\n  let incorrectAnswers = state.verbs.questions.incorrectAnswers.length;\n  let totalQuestions = state.verbs.questions.shuffledIds.length;\n  if (correctAnswers + incorrectAnswers === totalQuestions - 1) return true;else return false;\n};\nexport const selectFinalResults = state => {\n  let incorrectIds = state.verbs.questions.incorrectAnswers;\n  let allVerbs = state.verbs.filteredVerbs;\n  const incorrectAnswers = incorrectIds.map(num => {\n    let verb = allVerbs.find(el => el.id === num);\n    return verb.fullP;\n  });\n  return incorrectAnswers;\n};\nexport const {\n  loadData,\n  selectTense,\n  addCorrect,\n  addIncorrect\n} = verbsSlice.actions;\nexport default verbsSlice.reducer;","map":{"version":3,"names":["createSlice","createVerbObject","filterSelectedVerbTense","shuffleVerbIds","verbsSlice","name","initialState","isActive","filteredVerbs","tenseSelection","questions","shuffledIds","correctAnswers","incorrectAnswers","reducers","selectTense","state","action","filters","payload","allVerbs","addCorrect","push","addIncorrect","selectFilteredVerbs","verbs","selectShufflesIds","selectResultTally","length","totalQuestions","selectFinalResults","incorrectIds","map","num","verb","find","el","id","fullP","loadData","actions","reducer"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/app/verbsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { createVerbObject, filterSelectedVerbTense, shuffleVerbIds } from '../functions/loadingFunctions';\n\nexport const verbsSlice = createSlice({\n   name: 'verbs',\n   initialState: {\n    isActive: false,\n    filteredVerbs: [],\n    tenseSelection: [],\n    questions: {\n      shuffledIds: [],\n      correctAnswers: [],\n      incorrectAnswers: []\n    }\n   },\n   reducers: {\n      selectTense: (state, action) => {\n        let filters = action.payload\n        let allVerbs = createVerbObject()\n        let filteredVerbs = filterSelectedVerbTense(filters, allVerbs)\n        let shuffledIds = shuffleVerbIds(filteredVerbs)\n\n        state.tenseSelection = action.payload\n        state.filteredVerbs = filteredVerbs\n        state.questions.shuffledIds = shuffledIds\n      },\n      addCorrect: (state, action) => {\n        state.questions.correctAnswers.push(action.payload)\n      },\n      addIncorrect: (state, action) => {\n        state.questions.incorrectAnswers.push(action.payload)\n        // tallyResponse(state)\n      },\n   }\n})\n\nexport const selectFilteredVerbs = (state) => state.verbs.filteredVerbs\n\nexport const selectShufflesIds = (state) => {\n  return state.verbs.questions.shuffledIds\n}\n\nexport const selectResultTally = (state) => {\n  let correctAnswers = state.verbs.questions.correctAnswers.length\n  let incorrectAnswers = state.verbs.questions.incorrectAnswers.length\n  let totalQuestions = state.verbs.questions.shuffledIds.length\n  if ((correctAnswers + incorrectAnswers) === totalQuestions - 1) return true\n  else return false\n}\n\nexport const selectFinalResults = (state) => {\n  let incorrectIds = state.verbs.questions.incorrectAnswers;\n  let allVerbs = state.verbs.filteredVerbs\n  const incorrectAnswers = incorrectIds.map(num => {\n    let verb = allVerbs.find(el => el.id === num)\n    return verb.fullP\n  })\n  return incorrectAnswers\n}\n\nexport const { loadData, selectTense, addCorrect, addIncorrect } = verbsSlice.actions;\n\nexport default verbsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,EAAEC,uBAAuB,EAAEC,cAAc,QAAQ,+BAA+B;AAEzG,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACbC,QAAQ,EAAE,KAAK;IACfC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,SAAS,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE,EAAE;MAClBC,gBAAgB,EAAE;IACpB;EACD,CAAC;EACDC,QAAQ,EAAE;IACPC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,IAAIC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC5B,IAAIC,QAAQ,GAAGnB,gBAAgB,CAAC,CAAC;MACjC,IAAIO,aAAa,GAAGN,uBAAuB,CAACgB,OAAO,EAAEE,QAAQ,CAAC;MAC9D,IAAIT,WAAW,GAAGR,cAAc,CAACK,aAAa,CAAC;MAE/CQ,KAAK,CAACP,cAAc,GAAGQ,MAAM,CAACE,OAAO;MACrCH,KAAK,CAACR,aAAa,GAAGA,aAAa;MACnCQ,KAAK,CAACN,SAAS,CAACC,WAAW,GAAGA,WAAW;IAC3C,CAAC;IACDU,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACN,SAAS,CAACE,cAAc,CAACU,IAAI,CAACL,MAAM,CAACE,OAAO,CAAC;IACrD,CAAC;IACDI,YAAY,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACN,SAAS,CAACG,gBAAgB,CAACS,IAAI,CAACL,MAAM,CAACE,OAAO,CAAC;MACrD;IACF;EACH;AACH,CAAC,CAAC;AAEF,OAAO,MAAMK,mBAAmB,GAAIR,KAAK,IAAKA,KAAK,CAACS,KAAK,CAACjB,aAAa;AAEvE,OAAO,MAAMkB,iBAAiB,GAAIV,KAAK,IAAK;EAC1C,OAAOA,KAAK,CAACS,KAAK,CAACf,SAAS,CAACC,WAAW;AAC1C,CAAC;AAED,OAAO,MAAMgB,iBAAiB,GAAIX,KAAK,IAAK;EAC1C,IAAIJ,cAAc,GAAGI,KAAK,CAACS,KAAK,CAACf,SAAS,CAACE,cAAc,CAACgB,MAAM;EAChE,IAAIf,gBAAgB,GAAGG,KAAK,CAACS,KAAK,CAACf,SAAS,CAACG,gBAAgB,CAACe,MAAM;EACpE,IAAIC,cAAc,GAAGb,KAAK,CAACS,KAAK,CAACf,SAAS,CAACC,WAAW,CAACiB,MAAM;EAC7D,IAAKhB,cAAc,GAAGC,gBAAgB,KAAMgB,cAAc,GAAG,CAAC,EAAE,OAAO,IAAI,MACtE,OAAO,KAAK;AACnB,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAId,KAAK,IAAK;EAC3C,IAAIe,YAAY,GAAGf,KAAK,CAACS,KAAK,CAACf,SAAS,CAACG,gBAAgB;EACzD,IAAIO,QAAQ,GAAGJ,KAAK,CAACS,KAAK,CAACjB,aAAa;EACxC,MAAMK,gBAAgB,GAAGkB,YAAY,CAACC,GAAG,CAACC,GAAG,IAAI;IAC/C,IAAIC,IAAI,GAAGd,QAAQ,CAACe,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKJ,GAAG,CAAC;IAC7C,OAAOC,IAAI,CAACI,KAAK;EACnB,CAAC,CAAC;EACF,OAAOzB,gBAAgB;AACzB,CAAC;AAED,OAAO,MAAM;EAAE0B,QAAQ;EAAExB,WAAW;EAAEM,UAAU;EAAEE;AAAa,CAAC,GAAGnB,UAAU,CAACoC,OAAO;AAErF,eAAepC,UAAU,CAACqC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}