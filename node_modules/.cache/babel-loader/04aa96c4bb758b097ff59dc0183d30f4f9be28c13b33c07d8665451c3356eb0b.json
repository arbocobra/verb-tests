{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredVerbs } from './../app/verbsSlice';\nimport _ from 'lodash';\nimport { shuffleIds } from '../app/testSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = props => {\n  _s();\n  // const { selectFilteredVerbs } = props\n  const dispatch = useDispatch();\n  const filteredVerbs = useSelector(selectFilteredVerbs);\n  // const shuffledIds = shuffleVerbIds()\n\n  const isFirstRender = useRef(true);\n  const onFirstRender = () => isFirstRender.current = false;\n  useEffect(() => onFirstRender, []);\n\n  // const shuffleVerbIds = () => {\n  //    if (!_.isEmpty(filteredVerbs)) {\n  //       console.log(filteredVerbs)\n  //       let result = []\n  //       for (let verb in filteredVerbs) {\n  //          result.push(filteredVerbs[verb].id)\n  //       }\n  //       dispatch(shuffleIds(result))\n  //    } else { return null}   \n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n_s(Test, \"8Q+H3XiY7I4OpOgIiZ1nYRiVEKU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","selectFilteredVerbs","_","shuffleIds","jsxDEV","_jsxDEV","Test","props","_s","dispatch","filteredVerbs","isFirstRender","onFirstRender","current","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Test.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredVerbs } from './../app/verbsSlice'\nimport _ from 'lodash'\n\nimport { shuffleIds } from '../app/testSlice';\n\nconst Test = (props) => {\n   // const { selectFilteredVerbs } = props\n   const dispatch = useDispatch();\n   const filteredVerbs = useSelector(selectFilteredVerbs)\n   // const shuffledIds = shuffleVerbIds()\n   \n\n   const isFirstRender = useRef(true)\n   const onFirstRender = () => isFirstRender.current = false\n\n\n \n   useEffect(() => onFirstRender, []);\n\n   // const shuffleVerbIds = () => {\n   //    if (!_.isEmpty(filteredVerbs)) {\n   //       console.log(filteredVerbs)\n   //       let result = []\n   //       for (let verb in filteredVerbs) {\n   //          result.push(filteredVerbs[verb].id)\n   //       }\n   //       dispatch(shuffleIds(result))\n   //    } else { return null}   \n   // }\n\n\n   return (\n      <div></div>\n   )\n}\n\nexport default Test"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB;EACA,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,aAAa,GAAGX,WAAW,CAACE,mBAAmB,CAAC;EACtD;;EAGA,MAAMU,aAAa,GAAGb,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMc,aAAa,GAAGA,CAAA,KAAMD,aAAa,CAACE,OAAO,GAAG,KAAK;EAIzDhB,SAAS,CAAC,MAAMe,aAAa,EAAE,EAAE,CAAC;;EAElC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACGP,OAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAEjB,CAAC;AAAAT,EAAA,CA7BKF,IAAI;EAAA,QAEUN,WAAW,EACND,WAAW;AAAA;AAAAmB,EAAA,GAH9BZ,IAAI;AA+BV,eAAeA,IAAI;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}