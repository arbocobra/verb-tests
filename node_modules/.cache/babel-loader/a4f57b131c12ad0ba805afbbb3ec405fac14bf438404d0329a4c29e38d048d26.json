{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Verbs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport { loadData, selectTense, selectFilteredAllVerbs } from '../app/verbsSlice';\nimport createVerbObject from '../functions/loadingFunctions';\nimport Selection from './Selection';\nimport Test from './Test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verbs = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedTense, setSelectedTense] = useState(['all']);\n  // const [selectedVerbs, setSelectedVerbs] = useState({})\n\n  const isFirstRender = useRef(true);\n  const onFirstRender = () => {\n    dispatch(loadData(createVerbObject()));\n    isFirstRender.current = false;\n  };\n  const selectFilteredVerbs = useSelector(selectFilteredAllVerbs);\n  useEffect(onFirstRender, []);\n  const submitTense = () => {\n    submitResults()\n    // .then(() => selectVerbs())\n    .then(() => changeDisplay);\n  };\n  const submitResults = async () => dispatch(selectTense(selectedTense));\n  const changeDisplay = async () => document.getElementById('selection').classList.add('hidden');\n  // const selectVerbs = async () => setSelectedVerbs(selectFilteredVerbs)\n\n  // useEffect(() => console.log(selectedVerbs), [selectedVerbs])\n  // const selectVerbs = async () => {\n  //    const results = useSelector(selectFilteredAllVerbs)\n  //    setSelectedVerbs(results)\n  // }\n\n  // const updateTense = (arr) => setSelectedTense(arr)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello there!\", /*#__PURE__*/_jsxDEV(Selection, {\n      submitTense: submitTense,\n      selectedTense: selectedTense,\n      setSelectedTense: setSelectedTense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Test, {\n      selectFilteredVerbs: selectFilteredVerbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n_s(Verbs, \"/YgSSx56oJ00/ZQ93Yuhd9CcImI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Verbs;\nexport default Verbs;\nvar _c;\n$RefreshReg$(_c, \"Verbs\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","_","loadData","selectTense","selectFilteredAllVerbs","createVerbObject","Selection","Test","jsxDEV","_jsxDEV","Verbs","_s","dispatch","selectedTense","setSelectedTense","isFirstRender","onFirstRender","current","selectFilteredVerbs","submitTense","submitResults","then","changeDisplay","document","getElementById","classList","add","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Verbs.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash'\n\nimport { loadData, selectTense, selectFilteredAllVerbs } from '../app/verbsSlice';\n\nimport createVerbObject from '../functions/loadingFunctions';\nimport Selection from './Selection';\nimport Test from './Test';\n\nconst Verbs = () => {\n   const dispatch = useDispatch();\n   const [selectedTense, setSelectedTense] = useState(['all'])\n   // const [selectedVerbs, setSelectedVerbs] = useState({})\n   \n\n   const isFirstRender = useRef(true)\n   const onFirstRender = () => {\n      dispatch(loadData(createVerbObject()));\n      isFirstRender.current = false\n   }\n\n   const selectFilteredVerbs = useSelector(selectFilteredAllVerbs)\n   \n   useEffect(onFirstRender, []);\n\n   const submitTense = () => {\n      submitResults()\n      // .then(() => selectVerbs())\n      .then(() => changeDisplay)\n   }\n   \n   const submitResults = async () => dispatch(selectTense(selectedTense))\n   const changeDisplay = async () => document.getElementById('selection').classList.add('hidden')\n   // const selectVerbs = async () => setSelectedVerbs(selectFilteredVerbs)\n\n   // useEffect(() => console.log(selectedVerbs), [selectedVerbs])\n   // const selectVerbs = async () => {\n   //    const results = useSelector(selectFilteredAllVerbs)\n   //    setSelectedVerbs(results)\n   // }\n\n   // const updateTense = (arr) => setSelectedTense(arr)\n\n   return (\n      <div>\n         Hello there!\n         <Selection submitTense={submitTense} selectedTense={selectedTense} setSelectedTense={setSelectedTense} />\n         <Test selectFilteredVerbs={selectFilteredVerbs} />\n      </div>\n   )\n}\n\nexport default Verbs"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,SAASC,QAAQ,EAAEC,WAAW,EAAEC,sBAAsB,QAAQ,mBAAmB;AAEjF,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;EAC3D;;EAGA,MAAMmB,aAAa,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IACzBJ,QAAQ,CAACV,QAAQ,CAACG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACtCU,aAAa,CAACE,OAAO,GAAG,KAAK;EAChC,CAAC;EAED,MAAMC,mBAAmB,GAAGnB,WAAW,CAACK,sBAAsB,CAAC;EAE/DP,SAAS,CAACmB,aAAa,EAAE,EAAE,CAAC;EAE5B,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACvBC,aAAa,CAAC;IACd;IAAA,CACCC,IAAI,CAAC,MAAMC,aAAa,CAAC;EAC7B,CAAC;EAED,MAAMF,aAAa,GAAG,MAAAA,CAAA,KAAYR,QAAQ,CAACT,WAAW,CAACU,aAAa,CAAC,CAAC;EACtE,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAYC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;EAC9F;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACGjB,OAAA;IAAAkB,QAAA,GAAK,cAEF,eAAAlB,OAAA,CAACH,SAAS;MAACa,WAAW,EAAEA,WAAY;MAACN,aAAa,EAAEA,aAAc;MAACC,gBAAgB,EAAEA;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzGtB,OAAA,CAACF,IAAI;MAACW,mBAAmB,EAAEA;IAAoB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEZ,CAAC;AAAApB,EAAA,CAzCKD,KAAK;EAAA,QACSV,WAAW,EAWAD,WAAW;AAAA;AAAAiC,EAAA,GAZpCtB,KAAK;AA2CX,eAAeA,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}