{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Question.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Answer from './Answer';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = props => {\n  const {\n    verb,\n    index,\n    display\n  } = props;\n  if (display) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `question-${index}`,\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: verb.fullE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Answer, {\n        index: index,\n        verb: verb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hint\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hint: \", verb.infinitiveP, \" + \", verb.tense]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this);\n  } else return null;\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Answer","_","jsxDEV","_jsxDEV","Question","props","verb","index","display","id","className","children","fullE","fileName","_jsxFileName","lineNumber","columnNumber","infinitiveP","tense","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Question.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Answer from './Answer';\n\nimport _ from 'lodash'\n\nconst Question = (props) => {\n   const {verb, index, display} = props\n\n   if (display) {\n      return (\n         <div id={`question-${index}`} className='question-container'>\n            <div className='question-text'>\n               <p>{verb.fullE}</p>\n            </div>\n            <Answer index={index} verb={verb} />\n            <div className='hint'>\n               <p>Hint: {verb.infinitiveP} + {verb.tense}</p>\n            </div>\n         </div>\n      )\n   } else return null\n   \n}\n\nexport default Question"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAOC,CAAC,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EACzB,MAAM;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGH,KAAK;EAEpC,IAAIG,OAAO,EAAE;IACV,oBACGL,OAAA;MAAKM,EAAE,EAAE,YAAYF,KAAK,EAAG;MAACG,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACzDR,OAAA;QAAKO,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC3BR,OAAA;UAAAQ,QAAA,EAAIL,IAAI,CAACM;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACNb,OAAA,CAACH,MAAM;QAACO,KAAK,EAAEA,KAAM;QAACD,IAAI,EAAEA;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCb,OAAA;QAAKO,SAAS,EAAC,MAAM;QAAAC,QAAA,eAClBR,OAAA;UAAAQ,QAAA,GAAG,QAAM,EAACL,IAAI,CAACW,WAAW,EAAC,KAAG,EAACX,IAAI,CAACY,KAAK;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEZ,CAAC,MAAM,OAAO,IAAI;AAErB,CAAC;AAAAG,EAAA,GAjBKf,QAAQ;AAmBd,eAAeA,QAAQ;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}