{"ast":null,"code":"import data from './../data/verb-init.js';\nimport _ from 'lodash';\nconst createVerbObject = () => {\n  const Verbs = {};\n  for (const [index, verb] of data.entries()) {\n    const objectName = createObjectName(verb);\n    const objectData = extractData(verb, index);\n    Verbs[objectName] = objectData;\n  }\n  return Verbs;\n};\nconst createObjectName = verb => {\n  if (verb.innerId > 51) return _.camelCase([verb.tense, verb.infinitiveP, verb.pronounP, 'neg']);else return _.camelCase([verb.tense, verb.infinitiveP, verb.pronounP]);\n};\nconst extractData = (verb, i) => {\n  if (verb.tense === 'imperative') {\n    verb.fullP = `${verb.conjugationP} ${verb.pronounP}!`;\n    verb.fullE = `${verb.conjugationE}!`;\n  } else {\n    verb.fullP = `${verb.pronounP} ${verb.conjugationP}`;\n    verb.fullE = `${verb.pronounE} ${verb.conjugationE}`;\n  }\n  verb.id = i;\n  return verb;\n};\nexport default createVerbObject;","map":{"version":3,"names":["data","_","createVerbObject","Verbs","index","verb","entries","objectName","createObjectName","objectData","extractData","innerId","camelCase","tense","infinitiveP","pronounP","i","fullP","conjugationP","fullE","conjugationE","pronounE","id"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/functions/loadingFunctions.js"],"sourcesContent":["import data from './../data/verb-init.js'\nimport _ from 'lodash';\n\nconst createVerbObject = () => {\n   const Verbs = {}\n   for (const [index, verb] of data.entries()) {\n       const objectName = createObjectName(verb)\n       const objectData = extractData(verb, index)\n       Verbs[objectName] = objectData\n  }\n   return Verbs\n}\n\nconst createObjectName = (verb) => {\n  if (verb.innerId > 51) return _.camelCase([verb.tense, verb.infinitiveP, verb.pronounP, 'neg'])\n  else return _.camelCase([verb.tense, verb.infinitiveP, verb.pronounP])\n}\nconst extractData = (verb, i) => {\n  if (verb.tense === 'imperative') {\n    verb.fullP = `${verb.conjugationP} ${verb.pronounP}!`\n    verb.fullE = `${verb.conjugationE}!`\n  } else {\n    verb.fullP = `${verb.pronounP} ${verb.conjugationP}`\n    verb.fullE = `${verb.pronounE} ${verb.conjugationE}`\n  }\n  verb.id = i\n  return verb\n}\n\nexport default createVerbObject"],"mappings":"AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,CAAC,MAAM,QAAQ;AAEtB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC5B,MAAMC,KAAK,GAAG,CAAC,CAAC;EAChB,KAAK,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,IAAIL,IAAI,CAACM,OAAO,CAAC,CAAC,EAAE;IACxC,MAAMC,UAAU,GAAGC,gBAAgB,CAACH,IAAI,CAAC;IACzC,MAAMI,UAAU,GAAGC,WAAW,CAACL,IAAI,EAAED,KAAK,CAAC;IAC3CD,KAAK,CAACI,UAAU,CAAC,GAAGE,UAAU;EACnC;EACC,OAAON,KAAK;AACf,CAAC;AAED,MAAMK,gBAAgB,GAAIH,IAAI,IAAK;EACjC,IAAIA,IAAI,CAACM,OAAO,GAAG,EAAE,EAAE,OAAOV,CAAC,CAACW,SAAS,CAAC,CAACP,IAAI,CAACQ,KAAK,EAAER,IAAI,CAACS,WAAW,EAAET,IAAI,CAACU,QAAQ,EAAE,KAAK,CAAC,CAAC,MAC1F,OAAOd,CAAC,CAACW,SAAS,CAAC,CAACP,IAAI,CAACQ,KAAK,EAAER,IAAI,CAACS,WAAW,EAAET,IAAI,CAACU,QAAQ,CAAC,CAAC;AACxE,CAAC;AACD,MAAML,WAAW,GAAGA,CAACL,IAAI,EAAEW,CAAC,KAAK;EAC/B,IAAIX,IAAI,CAACQ,KAAK,KAAK,YAAY,EAAE;IAC/BR,IAAI,CAACY,KAAK,GAAG,GAAGZ,IAAI,CAACa,YAAY,IAAIb,IAAI,CAACU,QAAQ,GAAG;IACrDV,IAAI,CAACc,KAAK,GAAG,GAAGd,IAAI,CAACe,YAAY,GAAG;EACtC,CAAC,MAAM;IACLf,IAAI,CAACY,KAAK,GAAG,GAAGZ,IAAI,CAACU,QAAQ,IAAIV,IAAI,CAACa,YAAY,EAAE;IACpDb,IAAI,CAACc,KAAK,GAAG,GAAGd,IAAI,CAACgB,QAAQ,IAAIhB,IAAI,CAACe,YAAY,EAAE;EACtD;EACAf,IAAI,CAACiB,EAAE,GAAGN,CAAC;EACX,OAAOX,IAAI;AACb,CAAC;AAED,eAAeH,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}