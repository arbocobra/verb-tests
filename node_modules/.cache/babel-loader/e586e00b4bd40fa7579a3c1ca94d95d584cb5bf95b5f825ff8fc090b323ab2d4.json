{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport { loadData, selectTense, selectFilteredAllVerbs } from '../app/verbsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = props => {\n  _s();\n  const {\n    selectFilteredVerbs\n  } = props;\n  // const dispatch = useDispatch();\n  // const testVerbs = useSelector(selectFilteredAllVerbs)\n\n  const isFirstRender = useRef(true);\n  const onFirstRender = () => isFirstRender.current = false;\n  useEffect(() => onFirstRender, []);\n  useEffect(() => console.log(selectFilteredVerbs), [selectFilteredVerbs]);\n\n  // console.log(testVerbs)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n_s(Test, \"7M3BVf8Wtqr8W+P7ZCuwTH5OO5A=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","_","loadData","selectTense","selectFilteredAllVerbs","jsxDEV","_jsxDEV","Test","props","_s","selectFilteredVerbs","isFirstRender","onFirstRender","current","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Test.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash'\n\nimport { loadData, selectTense, selectFilteredAllVerbs } from '../app/verbsSlice';\n\nconst Test = (props) => {\n   const { selectFilteredVerbs } = props\n   // const dispatch = useDispatch();\n   // const testVerbs = useSelector(selectFilteredAllVerbs)\n\n   const isFirstRender = useRef(true)\n   const onFirstRender = () => isFirstRender.current = false\n \n\n\n   useEffect(() => onFirstRender, []);\n   useEffect(() => console.log(selectFilteredVerbs), [selectFilteredVerbs])\n\n   // console.log(testVerbs)\n\n   return (\n      <div></div>\n   )\n}\n\nexport default Test"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,SAASC,QAAQ,EAAEC,WAAW,EAAEC,sBAAsB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAoB,CAAC,GAAGF,KAAK;EACrC;EACA;;EAEA,MAAMG,aAAa,GAAGb,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMc,aAAa,GAAGA,CAAA,KAAMD,aAAa,CAACE,OAAO,GAAG,KAAK;EAIzDhB,SAAS,CAAC,MAAMe,aAAa,EAAE,EAAE,CAAC;EAClCf,SAAS,CAAC,MAAMiB,OAAO,CAACC,GAAG,CAACL,mBAAmB,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;;EAExE;;EAEA,oBACGJ,OAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAEjB,CAAC;AAAAV,EAAA,CAlBKF,IAAI;AAAAa,EAAA,GAAJb,IAAI;AAoBV,eAAeA,IAAI;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}