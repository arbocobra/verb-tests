{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/QuestionBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addCorrect, addIncorrect } from '../app/verbsSlice';\nimport Question from './Question';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBox = props => {\n  _s();\n  const {\n    questionIdArray,\n    filteredVerbs,\n    displayQuestion\n  } = props;\n  const [activeId, setActiveId] = useState(0);\n  const dispatch = useDispatch();\n  const submitAnswer = arr => {\n    let val = arr[0];\n    let correct = arr[1];\n    let id = arr[2];\n    if (val === correct) dispatch(addCorrect(index));else dispatch(addIncorrect(id));\n    setActiveId(current => current++);\n  };\n  const selectedVerb = i => filteredVerbs.find(el => el.id === i);\n  if (displayQuestion) {\n    return (\n      /*#__PURE__*/\n      // <div>We have verbs</div>\n      // <div>{QuestionArray()}</div>\n      _jsxDEV(\"div\", {\n        children: questionIdArray.map((id, index) => /*#__PURE__*/_jsxDEV(Question, {\n          display: activeId === index,\n          verb: selectedVerb(id),\n          index: index,\n          setActiveId: setActiveId\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 51\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this)\n    );\n  } else return null;\n};\n_s(QuestionBox, \"7M4/z2X0hi5VNRyt/p1Q9Hmt4Wg=\", false, function () {\n  return [useDispatch];\n});\n_c = QuestionBox;\nexport default QuestionBox;\nvar _c;\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","addCorrect","addIncorrect","Question","_","jsxDEV","_jsxDEV","QuestionBox","props","_s","questionIdArray","filteredVerbs","displayQuestion","activeId","setActiveId","dispatch","submitAnswer","arr","val","correct","id","index","current","selectedVerb","i","find","el","children","map","display","verb","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/QuestionBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addCorrect, addIncorrect } from '../app/verbsSlice';\n\nimport Question from './Question';\n\nimport _ from 'lodash'\n\nconst QuestionBox = (props) => {\n   const {questionIdArray, filteredVerbs, displayQuestion} = props\n   const [activeId, setActiveId] = useState(0)\n\n   const dispatch = useDispatch()\n\n   const submitAnswer = (arr) => {\n      let val = arr[0]\n      let correct = arr[1]\n      let id = arr[2]\n      if (val === correct) dispatch(addCorrect(index))   \n      else dispatch(addIncorrect(id))\n      setActiveId((current) => current++)\n   }\n\n   const selectedVerb = (i) => filteredVerbs.find(el => el.id === i)\n\n   if (displayQuestion) {\n      return (\n         // <div>We have verbs</div>\n         // <div>{QuestionArray()}</div>\n         <div>{questionIdArray.map((id, index) => <Question display={activeId === index} verb={selectedVerb(id)} index={index} setActiveId={setActiveId} key={index} />)}</div>\n      )\n   } else return null\n}\n\nexport default QuestionBox"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,YAAY,QAAQ,mBAAmB;AAE5D,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,CAAC,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM;IAACC,eAAe;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAGJ,KAAK;EAC/D,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMmB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,YAAY,GAAIC,GAAG,IAAK;IAC3B,IAAIC,GAAG,GAAGD,GAAG,CAAC,CAAC,CAAC;IAChB,IAAIE,OAAO,GAAGF,GAAG,CAAC,CAAC,CAAC;IACpB,IAAIG,EAAE,GAAGH,GAAG,CAAC,CAAC,CAAC;IACf,IAAIC,GAAG,KAAKC,OAAO,EAAEJ,QAAQ,CAACd,UAAU,CAACoB,KAAK,CAAC,CAAC,MAC3CN,QAAQ,CAACb,YAAY,CAACkB,EAAE,CAAC,CAAC;IAC/BN,WAAW,CAAEQ,OAAO,IAAKA,OAAO,EAAE,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAKb,aAAa,CAACc,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACN,EAAE,KAAKI,CAAC,CAAC;EAEjE,IAAIZ,eAAe,EAAE;IAClB;MAAA;MACG;MACA;MACAN,OAAA;QAAAqB,QAAA,EAAMjB,eAAe,CAACkB,GAAG,CAAC,CAACR,EAAE,EAAEC,KAAK,kBAAKf,OAAA,CAACH,QAAQ;UAAC0B,OAAO,EAAEhB,QAAQ,KAAKQ,KAAM;UAACS,IAAI,EAAEP,YAAY,CAACH,EAAE,CAAE;UAACC,KAAK,EAAEA,KAAM;UAACP,WAAW,EAAEA;QAAY,GAAMO,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;EAE5K,CAAC,MAAM,OAAO,IAAI;AACrB,CAAC;AAAAzB,EAAA,CAxBKF,WAAW;EAAA,QAIGP,WAAW;AAAA;AAAAmC,EAAA,GAJzB5B,WAAW;AA0BjB,eAAeA,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}