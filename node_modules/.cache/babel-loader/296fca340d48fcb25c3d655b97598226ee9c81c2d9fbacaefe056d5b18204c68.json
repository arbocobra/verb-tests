{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useSelector,useDispatch}from'react-redux';import{selectShuffledIds,selectNextQuestion,setQuestion,addCorrect,addIncorrect,selectResultTally,selectFinalResults}from'../app/verbsSlice';import Question from'./Question';import AltQuestion from'./AltQuestion';import Results from'./Results';import Footer from'./Footer';import _ from'lodash';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AltQuestionBox=props=>{const{setDisplayQuestion}=props;const[activeIndex,setActiveIndex]=useState(0);const[testActive,setTestActive]=useState(true);const finalQuestion=useRef(false);const dispatch=useDispatch();const currentQuestion=useSelector(selectNextQuestion);const questionIdArray=useSelector(selectShuffledIds);useEffect(()=>{if(activeIndex===questionIdArray.length-1)finalQuestion.current=true;},[activeIndex]);const handleAnswer=(bool,id)=>{if(bool)dispatch(addCorrect());else dispatch(addIncorrect());dispatch(setQuestion(questionIdArray[activeIndex+1]));if(finalQuestion.current)completeTest();else setActiveIndex(current=>current+1);};const completeTest=event=>{setTestActive(false);finalQuestion.current=false;};if(testActive){return/*#__PURE__*/_jsxs(\"div\",{id:\"test\",className:\"test-container\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"question-box\",children:/*#__PURE__*/_jsx(AltQuestion,{verb:currentQuestion,index:activeIndex,display:true,handleAnswer:handleAnswer},activeIndex)}),/*#__PURE__*/_jsx(Footer,{activeId:activeIndex,testLength:questionIdArray.length,completeTest:completeTest})]});}else{return/*#__PURE__*/_jsx(Results,{totalQuestions:activeIndex,setDisplayQuestion:setDisplayQuestion,setTestActive:setTestActive});}// return (\n//    <div id='test' className='test-container'>\n//       {/* { if (testActive) (\n//          <div id='question-box'>\n//             <AltQuestion verb={currentQuestion} index={activeIndex} display={true} handleAnswer={handleAnswer} key={activeIndex} />\n//          </div>)\n//       } */}\n//       { testActive ? displayQuestion : displayResults}\n//       <Footer activeId={activeIndex} testLength={questionIdArray.length} completeTest={completeTest} />\n//    </div>\n// )\n};export default AltQuestionBox;","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","selectShuffledIds","selectNextQuestion","setQuestion","addCorrect","addIncorrect","selectResultTally","selectFinalResults","Question","AltQuestion","Results","Footer","_","jsx","_jsx","jsxs","_jsxs","AltQuestionBox","props","setDisplayQuestion","activeIndex","setActiveIndex","testActive","setTestActive","finalQuestion","dispatch","currentQuestion","questionIdArray","length","current","handleAnswer","bool","id","completeTest","event","className","children","verb","index","display","activeId","testLength","totalQuestions"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/verb-tests/src/components/AltQuestionBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectShuffledIds, selectNextQuestion, setQuestion, addCorrect, addIncorrect, selectResultTally, selectFinalResults } from '../app/verbsSlice';\n\nimport Question from './Question';\nimport AltQuestion from './AltQuestion';\nimport Results from './Results';\nimport Footer from './Footer';\n\nimport _ from 'lodash'\n\nconst AltQuestionBox = (props) => {\n   const { setDisplayQuestion } = props\n\n   const [activeIndex, setActiveIndex] = useState(0)\n   const [testActive, setTestActive] = useState(true)\n   const finalQuestion = useRef(false)\n\n   const dispatch = useDispatch()\n\n   const currentQuestion = useSelector(selectNextQuestion)\n   const questionIdArray = useSelector(selectShuffledIds)\n\n   useEffect(() => {\n      if (activeIndex === questionIdArray.length - 1) finalQuestion.current = true\n   }, [activeIndex])\n\n\n   const handleAnswer = (bool, id) => {\n      if (bool) dispatch(addCorrect())   \n      else dispatch(addIncorrect())\n\n      dispatch(setQuestion(questionIdArray[activeIndex + 1]))\n      \n      if (finalQuestion.current) completeTest()\n      else setActiveIndex((current) => current + 1)\n   }\n\n   const completeTest = (event) => {\n      setTestActive(false)\n      finalQuestion.current = false\n\n   }\n\n   if (testActive) {\n      return (\n      <div id='test' className='test-container'>\n         <div id='question-box'>\n            <AltQuestion verb={currentQuestion} index={activeIndex} display={true} handleAnswer={handleAnswer} key={activeIndex} />\n         </div> \n         <Footer activeId={activeIndex} testLength={questionIdArray.length} completeTest={completeTest} />\n      </div>\n   )} else {\n      return <Results totalQuestions={activeIndex} setDisplayQuestion={setDisplayQuestion} setTestActive={setTestActive} />\n   }\n   // return (\n   //    <div id='test' className='test-container'>\n   //       {/* { if (testActive) (\n   //          <div id='question-box'>\n   //             <AltQuestion verb={currentQuestion} index={activeIndex} display={true} handleAnswer={handleAnswer} key={activeIndex} />\n   //          </div>)\n   //       } */}\n   //       { testActive ? displayQuestion : displayResults}\n   //       <Footer activeId={activeIndex} testLength={questionIdArray.length} completeTest={completeTest} />\n   //    </div>\n   // )\n}\n\nexport default AltQuestionBox"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}