{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useSelector,useDispatch}from'react-redux';import{startTest}from'../app/verbsSlice';// import Selection from './Selection';\n// import Test from './Test';\nimport AltSelection from'./AltSelection';import AltTest from'./AltTest';import AltQuestionBox from'./AltQuestionBox';import{jsx as _jsx}from\"react/jsx-runtime\";const AltVerbs=()=>{const[displayQuestion,setDisplayQuestion]=useState(false);const isFirstRender=useRef(true);// const onFirstRender = () => isFirstRender.current = false\n// const onFirstRender = () => console.log('first render: AltVerbs')\n// useEffect(() => onFirstRender(), []);\nconst updatePage=()=>{document.getElementById('selection').classList.add('hidden');setDisplayQuestion(true);};return/*#__PURE__*/_jsx(\"div\",{id:\"verbs\",children:displayQuestion?/*#__PURE__*/_jsx(AltQuestionBox,{setDisplayQuestion:setDisplayQuestion}):/*#__PURE__*/_jsx(AltSelection,{updatePage:updatePage})});};export default AltVerbs;","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","startTest","AltSelection","AltTest","AltQuestionBox","jsx","_jsx","AltVerbs","displayQuestion","setDisplayQuestion","isFirstRender","updatePage","document","getElementById","classList","add","id","children"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/verb-tests/src/components/AltVerbs.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { startTest } from '../app/verbsSlice';\n\n// import Selection from './Selection';\n// import Test from './Test';\n\nimport AltSelection from './AltSelection';\nimport AltTest from './AltTest';\nimport AltQuestionBox from './AltQuestionBox';\n\nconst AltVerbs = () => {\n\n   const [displayQuestion, setDisplayQuestion] = useState(false)\n\n   const isFirstRender = useRef(true)\n   // const onFirstRender = () => isFirstRender.current = false\n   // const onFirstRender = () => console.log('first render: AltVerbs')\n   \n   // useEffect(() => onFirstRender(), []);\n\n   const updatePage = () => {\n      document.getElementById('selection').classList.add('hidden')\n      setDisplayQuestion(true)\n   }\n\n   return (\n      <div id='verbs'>\n         {/* { displayQuestion ? <Test displayQuestion={displayQuestion} /> : <Selection updatePage={updatePage} /> }         */}\n         { displayQuestion ? <AltQuestionBox setDisplayQuestion={setDisplayQuestion} /> : <AltSelection updatePage={updatePage} /> } \n      </div>\n   )\n}\n\nexport default AltVerbs"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,OAASC,SAAS,KAAQ,mBAAmB,CAE7C;AACA;AAEA,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAEpB,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAE7D,KAAM,CAAAc,aAAa,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAClC;AACA;AAEA;AAEA,KAAM,CAAAa,UAAU,CAAGA,CAAA,GAAM,CACtBC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC,CAC5DN,kBAAkB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAED,mBACGH,IAAA,QAAKU,EAAE,CAAC,OAAO,CAAAC,QAAA,CAEVT,eAAe,cAAGF,IAAA,CAACF,cAAc,EAACK,kBAAkB,CAAEA,kBAAmB,CAAE,CAAC,cAAGH,IAAA,CAACJ,YAAY,EAACS,UAAU,CAAEA,UAAW,CAAE,CAAC,CACvH,CAAC,CAEZ,CAAC,CAED,cAAe,CAAAJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}