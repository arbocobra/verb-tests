{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport createVerbObject from '../functions/loadingFunctions';\nexport const verbsSlice = createSlice({\n  name: 'verbs',\n  initialState: {\n    allVerbs: {},\n    filteredVerbs: {},\n    tenseSelection: []\n  },\n  reducers: {\n    loadData: (state, action) => {\n      state.allVerbs = action.payload;\n    },\n    selectTense: (state, action) => {\n      let filters = action.payload;\n      let allVerbs = createVerbObject();\n      let filteredVerbs = filterSelectedVerbTense(filters, allVerbs);\n      state.tenseSelection = action.payload;\n      state.filteredVerbs = filteredVerbs;\n    }\n  }\n});\n\n// const selectAllVerbs = (state) => state.verbs.allVerbs;\n// const selectTense = (state) => state.verbs.tenseSelection\n\nconst filterSelectedVerbTense = (tense, verbs) => {\n  if (tense[0] === 'all') return verbs;else if (tense.length === 0) return {};else {\n    let filteredVerbs = {};\n    for (let verb in verbs) {\n      let isIncluded = tense.includes(verbs[verb].tense);\n      if (isIncluded) filteredVerbs[verb] = verbs[verb];\n    }\n    return filteredVerbs;\n  }\n};\nexport const selectFilteredVerbs = state => state.verbs.filteredVerbs;\nexport const {\n  loadData,\n  selectTense\n} = verbsSlice.actions;\nexport default verbsSlice.reducer;\n\n// let letMeFoldBelow\n\n// import { createSlice } from '@reduxjs/toolkit';\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// Slice Object\n///////////////////////////////////////\n// export const favoriteRecipesSlice = createSlice({\n//   name: \"favoriteRecipes\",\n//   initialState: [],\n//   reducers: {\n//     addRecipe: (state, action) => {\n//       state.push(action.payload);\n//     },\n//     removeRecipe: (state, action) => {\n//       return state.filter(recipe => recipe.id !== action.payload.id)\n//     },\n//   },\n// });\n\n// Selectors\n///////////////////////////////////////\n// export const selectFavoriteRecipes = (state) => state.favoriteRecipes;\n\n// export const selectFilteredFavoriteRecipes = (state) => {\n//   const favoriteRecipes = selectFavoriteRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return favoriteRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };\n\n// Exports\n///////////////////////////////////////\n// export const {\n//    addRecipe,\n//    removeRecipe,\n// } = favoriteRecipesSlice.actions;\n\n// export default favoriteRecipesSlice.reducer;\n\n// import allRecipesData from '../../data.js'\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// export const loadData = () => {\n//   return {\n//     type: 'allRecipes/loadData',\n//     payload: allRecipesData\n//   }\n// }\n\n// const initialState = [];\n// export const allRecipesReducer = (allRecipes = initialState, action) => {\n//   switch (action.type) {\n//     case 'allRecipes/loadData':\n//       return action.payload;\n//     case 'favoriteRecipes/addRecipe':\n//       return allRecipes.filter(recipe => recipe.id !== action.payload.id);\n//     case 'favoriteRecipes/removeRecipe':\n//       return [...allRecipes, action.payload]\n//     default:\n//       return allRecipes;\n//   }\n// }\n\n// export const selectAllRecipes = (state) => state.allRecipes;\n\n// export const selectFilteredAllRecipes = (state) => {\n//   const allRecipes = selectAllRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return allRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };","map":{"version":3,"names":["createSlice","createVerbObject","verbsSlice","name","initialState","allVerbs","filteredVerbs","tenseSelection","reducers","loadData","state","action","payload","selectTense","filters","filterSelectedVerbTense","tense","verbs","length","verb","isIncluded","includes","selectFilteredVerbs","actions","reducer"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/app/verbsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport createVerbObject from '../functions/loadingFunctions';\n\nexport const verbsSlice = createSlice({\n   name: 'verbs',\n   initialState: {\n    allVerbs: {},\n    filteredVerbs: {},\n    tenseSelection: [],\n   },\n   reducers: {\n      loadData: (state, action) => {\n        state.allVerbs = action.payload\n      },\n      selectTense: (state, action) => {\n        let filters = action.payload\n        let allVerbs = createVerbObject()\n        let filteredVerbs = filterSelectedVerbTense(filters, allVerbs)\n        state.tenseSelection = action.payload\n        state.filteredVerbs = filteredVerbs\n      }\n   }\n})\n\n// const selectAllVerbs = (state) => state.verbs.allVerbs;\n// const selectTense = (state) => state.verbs.tenseSelection\n\nconst filterSelectedVerbTense = (tense, verbs) => {\n  if (tense[0] === 'all') return verbs\n  else if (tense.length === 0) return {}\n  else {\n    let filteredVerbs = {}\n    for (let verb in verbs) {\n      let isIncluded = tense.includes(verbs[verb].tense)\n      if (isIncluded) filteredVerbs[verb] = verbs[verb]\n    }\n    return filteredVerbs\n  }\n}\n\nexport const selectFilteredVerbs = (state) => state.verbs.filteredVerbs\n\nexport const { loadData, selectTense } = verbsSlice.actions;\n\nexport default verbsSlice.reducer;\n\n// let letMeFoldBelow\n\n\n\n// import { createSlice } from '@reduxjs/toolkit';\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// Slice Object\n///////////////////////////////////////\n// export const favoriteRecipesSlice = createSlice({\n//   name: \"favoriteRecipes\",\n//   initialState: [],\n//   reducers: {\n//     addRecipe: (state, action) => {\n//       state.push(action.payload);\n//     },\n//     removeRecipe: (state, action) => {\n//       return state.filter(recipe => recipe.id !== action.payload.id)\n//     },\n//   },\n// });\n\n\n// Selectors\n///////////////////////////////////////\n// export const selectFavoriteRecipes = (state) => state.favoriteRecipes;\n\n// export const selectFilteredFavoriteRecipes = (state) => {\n//   const favoriteRecipes = selectFavoriteRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return favoriteRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };\n\n// Exports\n///////////////////////////////////////\n// export const {\n//    addRecipe,\n//    removeRecipe,\n// } = favoriteRecipesSlice.actions;\n\n// export default favoriteRecipesSlice.reducer;\n\n// import allRecipesData from '../../data.js'\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// export const loadData = () => {\n//   return {\n//     type: 'allRecipes/loadData',\n//     payload: allRecipesData\n//   }\n// }\n\n\n// const initialState = [];\n// export const allRecipesReducer = (allRecipes = initialState, action) => {\n//   switch (action.type) {\n//     case 'allRecipes/loadData':\n//       return action.payload;\n//     case 'favoriteRecipes/addRecipe':\n//       return allRecipes.filter(recipe => recipe.id !== action.payload.id);\n//     case 'favoriteRecipes/removeRecipe':\n//       return [...allRecipes, action.payload]\n//     default:\n//       return allRecipes;\n//   }\n// }\n\n// export const selectAllRecipes = (state) => state.allRecipes;\n\n// export const selectFilteredAllRecipes = (state) => {\n//   const allRecipes = selectAllRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return allRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,gBAAgB,MAAM,+BAA+B;AAE5D,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;EACnCG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACbC,QAAQ,EAAE,CAAC,CAAC;IACZC,aAAa,EAAE,CAAC,CAAC;IACjBC,cAAc,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACPC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9B,IAAIG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC5B,IAAIP,QAAQ,GAAGJ,gBAAgB,CAAC,CAAC;MACjC,IAAIK,aAAa,GAAGS,uBAAuB,CAACD,OAAO,EAAET,QAAQ,CAAC;MAC9DK,KAAK,CAACH,cAAc,GAAGI,MAAM,CAACC,OAAO;MACrCF,KAAK,CAACJ,aAAa,GAAGA,aAAa;IACrC;EACH;AACH,CAAC,CAAC;;AAEF;AACA;;AAEA,MAAMS,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;EAChD,IAAID,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,OAAOC,KAAK,MAC/B,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,MACjC;IACH,IAAIZ,aAAa,GAAG,CAAC,CAAC;IACtB,KAAK,IAAIa,IAAI,IAAIF,KAAK,EAAE;MACtB,IAAIG,UAAU,GAAGJ,KAAK,CAACK,QAAQ,CAACJ,KAAK,CAACE,IAAI,CAAC,CAACH,KAAK,CAAC;MAClD,IAAII,UAAU,EAAEd,aAAa,CAACa,IAAI,CAAC,GAAGF,KAAK,CAACE,IAAI,CAAC;IACnD;IACA,OAAOb,aAAa;EACtB;AACF,CAAC;AAED,OAAO,MAAMgB,mBAAmB,GAAIZ,KAAK,IAAKA,KAAK,CAACO,KAAK,CAACX,aAAa;AAEvE,OAAO,MAAM;EAAEG,QAAQ;EAAEI;AAAY,CAAC,GAAGX,UAAU,CAACqB,OAAO;AAE3D,eAAerB,UAAU,CAACsB,OAAO;;AAEjC;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}