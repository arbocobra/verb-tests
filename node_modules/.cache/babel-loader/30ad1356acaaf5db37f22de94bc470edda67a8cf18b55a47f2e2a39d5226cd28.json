{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createVerbObject, filterSelectedVerbTense, shuffleVerbIds } from '../functions/loadingFunctions';\nexport const verbsSlice = createSlice({\n  name: 'verbs',\n  initialState: {\n    // allVerbs: {},\n    filteredVerbs: [],\n    tenseSelection: [],\n    questions: {\n      shuffledIds: [],\n      correctAnswers: [],\n      incorrectAnswers: []\n    }\n  },\n  reducers: {\n    loadData: (state, action) => {\n      state.allVerbs = action.payload;\n    },\n    selectTense: (state, action) => {\n      let filters = action.payload;\n      let allVerbs = createVerbObject();\n      let filteredVerbs = filterSelectedVerbTense(filters, allVerbs);\n      let shuffledIds = shuffleVerbIds(filteredVerbs);\n      state.tenseSelection = action.payload;\n      state.filteredVerbs = filteredVerbs;\n      state.questions.shuffledIds = shuffledIds;\n    },\n    addCorrect: (state, action) => {\n      state.questions.correctAnswers.push(action.payload);\n      tallyResponse();\n    },\n    addIncorrect: (state, action) => {\n      state.questions.incorrectAnswers.push(action.payload);\n      tallyResponse(state);\n    }\n  }\n});\nconst tallyResponse = state => {\n  console.log(state.verbs);\n  let correctAnswers = state.verbs.questions.correctAnswers.length;\n  let incorrectAnswers = state.verbs.questions.incorrectAnswers.length;\n  let totalQuestions = state.verbs.questions.shuffledIds.length;\n  if (correctAnswers + incorrectAnswers === totalQuestions) document.alert('done');\n};\n\n// const selectAllVerbs = (state) => state.verbs.allVerbs;\n// const selectTense = (state) => state.verbs.tenseSelection\n\nexport const selectFilteredVerbs = state => state.verbs.filteredVerbs;\nexport const selectShufflesIds = state => state.verbs.questions.shuffledIds;\nexport const {\n  loadData,\n  selectTense,\n  addCorrect,\n  addIncorrect\n} = verbsSlice.actions;\nexport default verbsSlice.reducer;\n\n// let letMeFoldBelow\n\n// import { createSlice } from '@reduxjs/toolkit';\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// Slice Object\n///////////////////////////////////////\n// export const favoriteRecipesSlice = createSlice({\n//   name: \"favoriteRecipes\",\n//   initialState: [],\n//   reducers: {\n//     addRecipe: (state, action) => {\n//       state.push(action.payload);\n//     },\n//     removeRecipe: (state, action) => {\n//       return state.filter(recipe => recipe.id !== action.payload.id)\n//     },\n//   },\n// });\n\n// Selectors\n///////////////////////////////////////\n// export const selectFavoriteRecipes = (state) => state.favoriteRecipes;\n\n// export const selectFilteredFavoriteRecipes = (state) => {\n//   const favoriteRecipes = selectFavoriteRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return favoriteRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };\n\n// Exports\n///////////////////////////////////////\n// export const {\n//    addRecipe,\n//    removeRecipe,\n// } = favoriteRecipesSlice.actions;\n\n// export default favoriteRecipesSlice.reducer;\n\n// import allRecipesData from '../../data.js'\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// export const loadData = () => {\n//   return {\n//     type: 'allRecipes/loadData',\n//     payload: allRecipesData\n//   }\n// }\n\n// const initialState = [];\n// export const allRecipesReducer = (allRecipes = initialState, action) => {\n//   switch (action.type) {\n//     case 'allRecipes/loadData':\n//       return action.payload;\n//     case 'favoriteRecipes/addRecipe':\n//       return allRecipes.filter(recipe => recipe.id !== action.payload.id);\n//     case 'favoriteRecipes/removeRecipe':\n//       return [...allRecipes, action.payload]\n//     default:\n//       return allRecipes;\n//   }\n// }\n\n// export const selectAllRecipes = (state) => state.allRecipes;\n\n// export const selectFilteredAllRecipes = (state) => {\n//   const allRecipes = selectAllRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return allRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };","map":{"version":3,"names":["createSlice","createVerbObject","filterSelectedVerbTense","shuffleVerbIds","verbsSlice","name","initialState","filteredVerbs","tenseSelection","questions","shuffledIds","correctAnswers","incorrectAnswers","reducers","loadData","state","action","allVerbs","payload","selectTense","filters","addCorrect","push","tallyResponse","addIncorrect","console","log","verbs","length","totalQuestions","document","alert","selectFilteredVerbs","selectShufflesIds","actions","reducer"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/app/verbsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { createVerbObject, filterSelectedVerbTense, shuffleVerbIds } from '../functions/loadingFunctions';\n\nexport const verbsSlice = createSlice({\n   name: 'verbs',\n   initialState: {\n    // allVerbs: {},\n    filteredVerbs: [],\n    tenseSelection: [],\n    questions: {\n      shuffledIds: [],\n      correctAnswers: [],\n      incorrectAnswers: []\n    }\n   },\n   reducers: {\n      loadData: (state, action) => {\n        state.allVerbs = action.payload\n      },\n      selectTense: (state, action) => {\n        let filters = action.payload\n        let allVerbs = createVerbObject()\n        let filteredVerbs = filterSelectedVerbTense(filters, allVerbs)\n        let shuffledIds = shuffleVerbIds(filteredVerbs)\n\n        state.tenseSelection = action.payload\n        state.filteredVerbs = filteredVerbs\n        state.questions.shuffledIds = shuffledIds\n      },\n      addCorrect: (state, action) => {\n        state.questions.correctAnswers.push(action.payload)\n        tallyResponse()\n      },\n      addIncorrect: (state, action) => {\n        state.questions.incorrectAnswers.push(action.payload)\n        tallyResponse(state)\n      }\n   }\n})\n\nconst tallyResponse = (state) => {\n  console.log(state.verbs)\n  let correctAnswers = state.verbs.questions.correctAnswers.length\n  let incorrectAnswers = state.verbs.questions.incorrectAnswers.length\n  let totalQuestions = state.verbs.questions.shuffledIds.length\n  if ((correctAnswers + incorrectAnswers) === totalQuestions) document.alert('done')\n}\n\n// const selectAllVerbs = (state) => state.verbs.allVerbs;\n// const selectTense = (state) => state.verbs.tenseSelection\n\n\n\nexport const selectFilteredVerbs = (state) => state.verbs.filteredVerbs\n\nexport const selectShufflesIds = (state) => state.verbs.questions.shuffledIds\n\nexport const { loadData, selectTense, addCorrect, addIncorrect } = verbsSlice.actions;\n\nexport default verbsSlice.reducer;\n\n// let letMeFoldBelow\n\n\n\n// import { createSlice } from '@reduxjs/toolkit';\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// Slice Object\n///////////////////////////////////////\n// export const favoriteRecipesSlice = createSlice({\n//   name: \"favoriteRecipes\",\n//   initialState: [],\n//   reducers: {\n//     addRecipe: (state, action) => {\n//       state.push(action.payload);\n//     },\n//     removeRecipe: (state, action) => {\n//       return state.filter(recipe => recipe.id !== action.payload.id)\n//     },\n//   },\n// });\n\n\n// Selectors\n///////////////////////////////////////\n// export const selectFavoriteRecipes = (state) => state.favoriteRecipes;\n\n// export const selectFilteredFavoriteRecipes = (state) => {\n//   const favoriteRecipes = selectFavoriteRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return favoriteRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };\n\n// Exports\n///////////////////////////////////////\n// export const {\n//    addRecipe,\n//    removeRecipe,\n// } = favoriteRecipesSlice.actions;\n\n// export default favoriteRecipesSlice.reducer;\n\n// import allRecipesData from '../../data.js'\n// import { selectSearchTerm } from '../searchTerm/searchTermSlice.js';\n\n// export const loadData = () => {\n//   return {\n//     type: 'allRecipes/loadData',\n//     payload: allRecipesData\n//   }\n// }\n\n\n// const initialState = [];\n// export const allRecipesReducer = (allRecipes = initialState, action) => {\n//   switch (action.type) {\n//     case 'allRecipes/loadData':\n//       return action.payload;\n//     case 'favoriteRecipes/addRecipe':\n//       return allRecipes.filter(recipe => recipe.id !== action.payload.id);\n//     case 'favoriteRecipes/removeRecipe':\n//       return [...allRecipes, action.payload]\n//     default:\n//       return allRecipes;\n//   }\n// }\n\n// export const selectAllRecipes = (state) => state.allRecipes;\n\n// export const selectFilteredAllRecipes = (state) => {\n//   const allRecipes = selectAllRecipes(state);\n//   const searchTerm = selectSearchTerm(state);\n\n//   return allRecipes.filter((recipe) =>\n//     recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n// };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}