{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{createVerbObject,filterSelectedVerbTense,shuffleVerbIds}from'../functions/loadingFunctions';const initialState={isActive:false,filteredVerbs:[],tenseSelection:[],questions:{currentQuestion:null,shuffledIds:[],correctAnswers:[],incorrectAnswers:[]}};export const verbsSlice=createSlice({name:'verbs',initialState:initialState,reducers:{startTest:(state,action)=>{let filters=action.payload;let allVerbs=createVerbObject();let filteredVerbs=filterSelectedVerbTense(filters,allVerbs);let shuffledIds=shuffleVerbIds(filteredVerbs);let firstQuestion=filteredVerbs.find(verb=>verb.id===shuffledIds[0]);state.tenseSelection=action.payload;state.filteredVerbs=filteredVerbs;state.questions.shuffledIds=shuffledIds;state.questions.currentQuestion=firstQuestion;state.isActive=true;},setQuestion:(state,action)=>{let questionId=action.payload;let nextQuestion=state.filteredVerbs.find(verb=>verb.id===questionId);state.questions.currentQuestion=nextQuestion;},addCorrect:state=>{state.questions.correctAnswers.push(state.questions.currentQuestion.fullP);},addIncorrect:state=>{state.questions.incorrectAnswers.push(state.questions.currentQuestion.fullP);},endTest:state=>{return state.isActive=false;},resetTest:()=>{return initialState;}}});export const selectFilteredVerbs=state=>state.verbs.filteredVerbs;export const selectShuffledIds=state=>state.verbs.questions.shuffledIds;export const selectNextQuestion=state=>state.verbs.questions.currentQuestion;export const selectFinalResults=state=>state.verbs.questions.incorrectAnswers;export const{startTest,setQuestion,addCorrect,addIncorrect,resetTest}=verbsSlice.actions;export default verbsSlice.reducer;","map":{"version":3,"names":["createSlice","createVerbObject","filterSelectedVerbTense","shuffleVerbIds","initialState","isActive","filteredVerbs","tenseSelection","questions","currentQuestion","shuffledIds","correctAnswers","incorrectAnswers","verbsSlice","name","reducers","startTest","state","action","filters","payload","allVerbs","firstQuestion","find","verb","id","setQuestion","questionId","nextQuestion","addCorrect","push","fullP","addIncorrect","endTest","resetTest","selectFilteredVerbs","verbs","selectShuffledIds","selectNextQuestion","selectFinalResults","actions","reducer"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/verb-tests/src/app/verbsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { createVerbObject, filterSelectedVerbTense, shuffleVerbIds } from '../functions/loadingFunctions';\n\nconst initialState = {\n  isActive: false,\n  filteredVerbs: [],\n  tenseSelection: [],\n  questions: {\n    currentQuestion: null,\n    shuffledIds: [],\n    correctAnswers: [],\n    incorrectAnswers: []\n  }\n }\n\nexport const verbsSlice = createSlice({\n   name: 'verbs',\n   initialState: initialState,\n   reducers: {\n      startTest: (state, action) => {\n        let filters = action.payload\n        let allVerbs = createVerbObject()\n        let filteredVerbs = filterSelectedVerbTense(filters, allVerbs)\n        let shuffledIds = shuffleVerbIds(filteredVerbs)\n        let firstQuestion = filteredVerbs.find(verb => verb.id === shuffledIds[0])\n\n        state.tenseSelection = action.payload\n        state.filteredVerbs = filteredVerbs\n        state.questions.shuffledIds = shuffledIds\n        state.questions.currentQuestion = firstQuestion\n        state.isActive = true\n      },\n      setQuestion: (state, action) => {\n        let questionId = action.payload\n        let nextQuestion = state.filteredVerbs.find(verb => verb.id === questionId)\n        state.questions.currentQuestion = nextQuestion\n      },\n      addCorrect: (state) => {\n        state.questions.correctAnswers.push(state.questions.currentQuestion.fullP)\n      },\n      addIncorrect: (state) => {\n        state.questions.incorrectAnswers.push(state.questions.currentQuestion.fullP)\n      },\n      endTest: (state) => {\n        return state.isActive = false\n      },\n      resetTest: () => {\n        return initialState\n      }\n   }\n})\n\nexport const selectFilteredVerbs = (state) => state.verbs.filteredVerbs\n\nexport const selectShuffledIds = (state) => state.verbs.questions.shuffledIds\n\nexport const selectNextQuestion = (state) => state.verbs.questions.currentQuestion\n\nexport const selectFinalResults = (state) => state.verbs.questions.incorrectAnswers\n\nexport const { startTest, setQuestion, addCorrect, addIncorrect, resetTest } = verbsSlice.actions;\n\nexport default verbsSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}