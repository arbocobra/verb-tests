{"ast":null,"code":"import React,{useState}from'react';import Selection from'./Selection';import TestContainer from'./TestContainer';import{jsx as _jsx}from\"react/jsx-runtime\";const Verbs=()=>{const[displayQuestion,setDisplayQuestion]=useState(false);const updatePage=()=>{document.getElementById('selection').classList.add('hidden');setDisplayQuestion(true);};return/*#__PURE__*/_jsx(\"div\",{id:\"verbs\",children:displayQuestion?/*#__PURE__*/_jsx(TestContainer,{setDisplayQuestion:setDisplayQuestion}):/*#__PURE__*/_jsx(Selection,{updatePage:updatePage})});};export default Verbs;","map":{"version":3,"names":["React","useState","Selection","TestContainer","jsx","_jsx","Verbs","displayQuestion","setDisplayQuestion","updatePage","document","getElementById","classList","add","id","children"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/verb-tests/src/components/Verbs.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Selection from './Selection';\nimport TestContainer from './TestContainer';\n\nconst Verbs = () => {\n\n   const [displayQuestion, setDisplayQuestion] = useState(false)\n\n   const updatePage = () => {\n      document.getElementById('selection').classList.add('hidden')\n      setDisplayQuestion(true)\n   }\n\n   return (\n      <div id='verbs'>\n         { displayQuestion ? <TestContainer setDisplayQuestion={setDisplayQuestion} /> : <Selection updatePage={updatePage} /> } \n      </div>\n   )\n}\n\nexport default Verbs"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAEjB,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CAE7D,KAAM,CAAAQ,UAAU,CAAGA,CAAA,GAAM,CACtBC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC,CAC5DL,kBAAkB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAED,mBACGH,IAAA,QAAKS,EAAE,CAAC,OAAO,CAAAC,QAAA,CACVR,eAAe,cAAGF,IAAA,CAACF,aAAa,EAACK,kBAAkB,CAAEA,kBAAmB,CAAE,CAAC,cAAGH,IAAA,CAACH,SAAS,EAACO,UAAU,CAAEA,UAAW,CAAE,CAAC,CACnH,CAAC,CAEZ,CAAC,CAED,cAAe,CAAAH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}