{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Verbs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport { loadData, selectTense, selectFilteredAllVerbs } from '../app/verbsSlice';\nimport createVerbObject from '../functions/loadingFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verbs = () => {\n  _s();\n  const allVerbs = useSelector(selectFilteredAllVerbs);\n  const dispatch = useDispatch();\n  const tenseSelection = useRef(['present', 'past', 'present continuous', 'past continuous', 'present perfect', 'past perfect', 'future perfect', 'imperfect', 'imperative']);\n  const [selectedTense, setSelectedTense] = useState([]);\n  const [isAll, setIsAll] = useState(true);\n  const onFirstRender = () => {\n    dispatch(loadData(createVerbObject()));\n  };\n  useEffect(onFirstRender, []);\n  const checkHandler = e => {\n    // console.log(e.target.checked)\n    let val = e.target.value;\n    let isSelected = e.target.checked;\n    let arr = [...selectedTense];\n    if (val === 'all') {\n      setIsAll(current => !current);\n      // setSelectedTense('all')\n    } else {\n      if (isSelected) arr.push(val);else arr.filter(el => el !== val);\n      // if (_.includes(arr, val)) _.pull(arr, val)\n      // else arr.push(val)\n      console.log(arr);\n      setSelectedTense(arr);\n    }\n    console.log(val);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello there!\", /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"tense0\",\n          value: \"all\",\n          onChange: checkHandler,\n          checked: isAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"tense0\",\n          children: \" All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), tenseSelection.current.map((tense, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"tense-checkbox, auto-checkbox\",\n          type: \"checkbox\",\n          id: `tense${i + 1}`,\n          value: tense,\n          onChange: checkHandler,\n          disabled: isAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: `tense${i}`,\n          children: [\" \", _.upperFirst(tense)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Ready\",\n          onclick: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(Verbs, \"ic4VUosc1Ky4ddFtRarQU3BFp/8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Verbs;\nexport default Verbs;\nvar _c;\n$RefreshReg$(_c, \"Verbs\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","_","loadData","selectTense","selectFilteredAllVerbs","createVerbObject","jsxDEV","_jsxDEV","Verbs","_s","allVerbs","dispatch","tenseSelection","selectedTense","setSelectedTense","isAll","setIsAll","onFirstRender","checkHandler","e","val","target","value","isSelected","checked","arr","current","push","filter","el","console","log","children","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","for","map","tense","i","className","disabled","upperFirst","onclick","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Verbs.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash'\n\nimport { loadData, selectTense, selectFilteredAllVerbs } from '../app/verbsSlice';\n\nimport createVerbObject from '../functions/loadingFunctions';\n\nconst Verbs = () => {\n\n   const allVerbs = useSelector(selectFilteredAllVerbs);\n   const dispatch = useDispatch();\n\n   const tenseSelection = useRef(['present', 'past', 'present continuous', 'past continuous', 'present perfect', 'past perfect', 'future perfect', 'imperfect', 'imperative'])\n   const [selectedTense, setSelectedTense] = useState([])\n   const [isAll, setIsAll] = useState(true)\n \n   const onFirstRender = () => {\n     dispatch(loadData(createVerbObject()));\n   }\n   useEffect(onFirstRender, []);\n\n   const checkHandler = (e) => {\n      // console.log(e.target.checked)\n      let val = e.target.value\n      let isSelected = e.target.checked\n      let arr = [...selectedTense]\n      if (val === 'all') {\n         setIsAll(current => !current)\n         // setSelectedTense('all')\n      } else {\n         if (isSelected) arr.push(val)\n         else arr.filter(el => el !== val)\n         // if (_.includes(arr, val)) _.pull(arr, val)\n         // else arr.push(val)\n         console.log(arr)\n         setSelectedTense(arr)\n      }\n      console.log(val)\n   }\n\n   return (\n      <div>\n         Hello there!\n         <form>\n            <div>\n               <input type='checkbox' id='tense0' value='all' onChange={checkHandler} checked={isAll} />\n               <label for='tense0'> All</label>\n            </div>\n            {tenseSelection.current.map((tense, i) => (\n               <div>\n                  <input className='tense-checkbox, auto-checkbox' type='checkbox' id={`tense${i + 1}`} value={tense} onChange={checkHandler} disabled={isAll} />\n                  <label for={`tense${i}`}> {_.upperFirst(tense)}</label>\n               </div>\n            ))}\n            <div><input type='button' value='Ready' onclick='' /></div>\n            {/* <input type='checkbox' id='tense1' value='present' />\n            <label for='tense1'> Present</label> */}\n         </form>\n         {/* {Object.keys(allVerbs).map(el => (<p>{el}</p>))} */}\n      </div>\n   )\n}\n\nexport default Verbs"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}