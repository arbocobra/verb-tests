{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredVerbs, selectShuffledIds } from './../app/verbsSlice';\nimport QuestionBox from './QuestionBox';\nimport AltQuestionBox from './AltQuestionBox';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = props => {\n  _s();\n  const {\n    displayQuestion\n  } = props;\n  const filteredVerbs = useSelector(selectFilteredVerbs);\n  const questionIdArray = useSelector(selectShuffledIds);\n  const isFirstRender = useRef(true);\n  const onFirstRender = () => isFirstRender.current = false;\n  useEffect(() => onFirstRender, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"test\",\n    className: \"test-container\",\n    children: /*#__PURE__*/_jsxDEV(AltQuestionBox, {\n      questionIdArray: questionIdArray,\n      filteredVerbs: filteredVerbs,\n      displayQuestion: displayQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(Test, \"MaQcruP4+9EIqB5Tr4lHHkr7GJ4=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","selectFilteredVerbs","selectShuffledIds","QuestionBox","AltQuestionBox","_","jsxDEV","_jsxDEV","Test","props","_s","displayQuestion","filteredVerbs","questionIdArray","isFirstRender","onFirstRender","current","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/Test.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredVerbs, selectShuffledIds } from './../app/verbsSlice'\nimport QuestionBox from './QuestionBox';\nimport AltQuestionBox from './AltQuestionBox';\n\nimport _ from 'lodash'\n\nconst Test = (props) => {\n   const { displayQuestion } = props\n   const filteredVerbs = useSelector(selectFilteredVerbs)\n   const questionIdArray = useSelector(selectShuffledIds)\n\n   const isFirstRender = useRef(true)\n   const onFirstRender = () => isFirstRender.current = false\n\n   \n \n   useEffect(() => onFirstRender, []);\n\n   return (\n      <div id='test' className='test-container'>\n         {/* <QuestionBox \n         questionIdArray={questionIdArray} \n         filteredVerbs={filteredVerbs} \n         displayQuestion={displayQuestion} /> */}\n         <AltQuestionBox \n            questionIdArray={questionIdArray} \n            filteredVerbs={filteredVerbs} \n            displayQuestion={displayQuestion} />\n      </div>\n   )\n}\n\nexport default Test"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,EAAEC,iBAAiB,QAAQ,qBAAqB;AAC5E,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,OAAOC,CAAC,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAgB,CAAC,GAAGF,KAAK;EACjC,MAAMG,aAAa,GAAGb,WAAW,CAACE,mBAAmB,CAAC;EACtD,MAAMY,eAAe,GAAGd,WAAW,CAACG,iBAAiB,CAAC;EAEtD,MAAMY,aAAa,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMiB,aAAa,GAAGA,CAAA,KAAMD,aAAa,CAACE,OAAO,GAAG,KAAK;EAIzDnB,SAAS,CAAC,MAAMkB,aAAa,EAAE,EAAE,CAAC;EAElC,oBACGR,OAAA;IAAKU,EAAE,EAAC,MAAM;IAACC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAKtCZ,OAAA,CAACH,cAAc;MACZS,eAAe,EAAEA,eAAgB;MACjCD,aAAa,EAAEA,aAAc;MAC7BD,eAAe,EAAEA;IAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEZ,CAAC;AAAAb,EAAA,CAxBKF,IAAI;EAAA,QAEeT,WAAW,EACTA,WAAW;AAAA;AAAAyB,EAAA,GAHhChB,IAAI;AA0BV,eAAeA,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}