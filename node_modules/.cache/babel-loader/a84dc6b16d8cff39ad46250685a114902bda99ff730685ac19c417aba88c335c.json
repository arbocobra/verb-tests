{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/QuestionBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Question from './Question';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBox = props => {\n  _s();\n  const {\n    questionIdArray,\n    filteredVerbs,\n    displayQuestion\n  } = props;\n  const [activeId, setActiveId] = useState(0);\n  const selectedVerb = i => filteredVerbs.find(el => el.id === i);\n  if (displayQuestion) {\n    return (\n      /*#__PURE__*/\n      // <div>We have verbs</div>\n      // <div>{QuestionArray()}</div>\n      _jsxDEV(\"div\", {\n        children: questionIdArray.map((id, index) => /*#__PURE__*/_jsxDEV(Question, {\n          display: activeId === index,\n          verb: selectedVerb(id),\n          index: index,\n          setActiveId: setActiveId\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 51\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }, this)\n    );\n  } else return null;\n};\n_s(QuestionBox, \"qCh77OYmhVA39T6vFJRqgNJiF6o=\");\n_c = QuestionBox;\nexport default QuestionBox;\nvar _c;\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Question","_","jsxDEV","_jsxDEV","QuestionBox","props","_s","questionIdArray","filteredVerbs","displayQuestion","activeId","setActiveId","selectedVerb","i","find","el","id","children","map","index","display","verb","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/QuestionBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Question from './Question';\n\nimport _ from 'lodash'\n\nconst QuestionBox = (props) => {\n   const {questionIdArray, filteredVerbs, displayQuestion} = props\n   const [activeId, setActiveId] = useState(0)\n\n\n\n   const selectedVerb = (i) => filteredVerbs.find(el => el.id === i)\n\n   if (displayQuestion) {\n      return (\n         // <div>We have verbs</div>\n         // <div>{QuestionArray()}</div>\n         <div>{questionIdArray.map((id, index) => <Question display={activeId === index} verb={selectedVerb(id)} index={index} setActiveId={setActiveId} key={index} />)}</div>\n      )\n   } else return null\n}\n\nexport default QuestionBox"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,CAAC,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM;IAACC,eAAe;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAGJ,KAAK;EAC/D,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAI3C,MAAMiB,YAAY,GAAIC,CAAC,IAAKL,aAAa,CAACM,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKH,CAAC,CAAC;EAEjE,IAAIJ,eAAe,EAAE;IAClB;MAAA;MACG;MACA;MACAN,OAAA;QAAAc,QAAA,EAAMV,eAAe,CAACW,GAAG,CAAC,CAACF,EAAE,EAAEG,KAAK,kBAAKhB,OAAA,CAACH,QAAQ;UAACoB,OAAO,EAAEV,QAAQ,KAAKS,KAAM;UAACE,IAAI,EAAET,YAAY,CAACI,EAAE,CAAE;UAACG,KAAK,EAAEA,KAAM;UAACR,WAAW,EAAEA;QAAY,GAAMQ,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;EAE5K,CAAC,MAAM,OAAO,IAAI;AACrB,CAAC;AAAAnB,EAAA,CAfKF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAiBjB,eAAeA,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}