{"ast":null,"code":"var _jsxFileName = \"/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/QuestionBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addCorrect, addIncorrect, selectResultTally, selectFinalResults } from '../app/verbsSlice';\nimport Question from './Question';\nimport Footer from './Footer';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionBox = props => {\n  _s();\n  const {\n    questionIdArray,\n    filteredVerbs,\n    displayQuestion\n  } = props;\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [testComplete, setTestComplete] = useState(false);\n  const dispatch = useDispatch();\n\n  // const activeId = questionIdArray[activeIndex]\n\n  // const lastQuestion = useSelector(selectResultTally)\n  // const wrongAnswers = useSelector((state) => {\n  //    let wrong = state.verbs.questions.incorrectAnswers\n  //    let right = state.verbs.questions.correctAnswers\n  //    return `Right: ${right} // Wrong: ${wrong}`\n  //    // if (testComplete) return selectFinalResults\n  //    // else return null\n  // })\n\n  const handleAnswer = (bool, id) => {\n    if (bool) dispatch(addCorrect(id));else dispatch(addIncorrect(id));\n    setActiveIndex(current => current + 1);\n\n    // if (lastQuestion) completeTest()\n    // else setActiveId((current) => current + 1)\n  };\n\n  // const completeTest = (event) => {\n  //    event.preventDefault()\n  //    setTestComplete(true)\n  //    console.log(wrongAnswers)\n  // }\n\n  const selectedVerb = activeId => {\n    filteredVerbs.find(el => el.id === activeId);\n  };\n  if (displayQuestion && !testComplete) {\n    const activeId = questionIdArray[activeIndex];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"question-box\",\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          verb: selectedVerb(activeId),\n          index: activeIndex,\n          display: true,\n          handleAnswer: handleAnswer\n        }, activeIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        activeId: activeId,\n        testLength: questionIdArray.length,\n        completeTest: completeTest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else return null;\n};\n_s(QuestionBox, \"p4KPg0MAUnZ4d62IdtJQdf5z6Z4=\", false, function () {\n  return [useDispatch];\n});\n_c = QuestionBox;\nexport default QuestionBox;\nvar _c;\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","addCorrect","addIncorrect","selectResultTally","selectFinalResults","Question","Footer","_","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionBox","props","_s","questionIdArray","filteredVerbs","displayQuestion","activeIndex","setActiveIndex","testComplete","setTestComplete","dispatch","handleAnswer","bool","id","current","selectedVerb","activeId","find","el","children","verb","index","display","fileName","_jsxFileName","lineNumber","columnNumber","testLength","length","completeTest","_c","$RefreshReg$"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/src/components/QuestionBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addCorrect, addIncorrect, selectResultTally, selectFinalResults } from '../app/verbsSlice';\n\nimport Question from './Question';\nimport Footer from './Footer';\n\nimport _ from 'lodash'\n\nconst QuestionBox = (props) => {\n   const {questionIdArray, filteredVerbs, displayQuestion} = props\n\n   const [activeIndex, setActiveIndex] = useState(0)\n   const [testComplete, setTestComplete] = useState(false)\n\n   const dispatch = useDispatch()\n\n   // const activeId = questionIdArray[activeIndex]\n\n\n   // const lastQuestion = useSelector(selectResultTally)\n   // const wrongAnswers = useSelector((state) => {\n   //    let wrong = state.verbs.questions.incorrectAnswers\n   //    let right = state.verbs.questions.correctAnswers\n   //    return `Right: ${right} // Wrong: ${wrong}`\n   //    // if (testComplete) return selectFinalResults\n   //    // else return null\n   // })\n\n   const handleAnswer = (bool, id) => {\n      if (bool) dispatch(addCorrect(id))   \n      else dispatch(addIncorrect(id))\n\n      setActiveIndex((current) => current + 1)\n      \n      // if (lastQuestion) completeTest()\n      // else setActiveId((current) => current + 1)\n   }\n\n   // const completeTest = (event) => {\n   //    event.preventDefault()\n   //    setTestComplete(true)\n   //    console.log(wrongAnswers)\n   // }\n\n   const selectedVerb = (activeId) => { filteredVerbs.find(el => el.id === activeId )\n   }\n\n   if (displayQuestion && !testComplete) {\n      const activeId = questionIdArray[activeIndex]\n      return (\n         <>\n            {/* <div id='question-box'>{questionIdArray.map((id, index) => <Question verb={selectedVerb(id)} index={index} display={activeId === index} handleAnswer={handleAnswer} key={index} />)}</div> */}\n            <div id='question-box'>\n               <Question verb={selectedVerb(activeId)} index={activeIndex} display={true} handleAnswer={handleAnswer} key={activeIndex} />\n            </div>\n            <Footer activeId={activeId} testLength={questionIdArray.length} completeTest={completeTest} />\n         </>\n      )\n   } else return null\n}\n\nexport default QuestionBox"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,kBAAkB,QAAQ,mBAAmB;AAEnG,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAOC,CAAC,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM;IAACC,eAAe;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAGJ,KAAK;EAE/D,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM0B,QAAQ,GAAGtB,WAAW,CAAC,CAAC;;EAE9B;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMuB,YAAY,GAAGA,CAACC,IAAI,EAAEC,EAAE,KAAK;IAChC,IAAID,IAAI,EAAEF,QAAQ,CAACrB,UAAU,CAACwB,EAAE,CAAC,CAAC,MAC7BH,QAAQ,CAACpB,YAAY,CAACuB,EAAE,CAAC,CAAC;IAE/BN,cAAc,CAAEO,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;;IAExC;IACA;EACH,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IAAEZ,aAAa,CAACa,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACL,EAAE,KAAKG,QAAS,CAAC;EAClF,CAAC;EAED,IAAIX,eAAe,IAAI,CAACG,YAAY,EAAE;IACnC,MAAMQ,QAAQ,GAAGb,eAAe,CAACG,WAAW,CAAC;IAC7C,oBACGT,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBAEGtB,OAAA;QAAKgB,EAAE,EAAC,cAAc;QAAAM,QAAA,eACnBtB,OAAA,CAACJ,QAAQ;UAAC2B,IAAI,EAAEL,YAAY,CAACC,QAAQ,CAAE;UAACK,KAAK,EAAEf,WAAY;UAACgB,OAAO,EAAE,IAAK;UAACX,YAAY,EAAEA;QAAa,GAAML,WAAW;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzH,CAAC,eACN7B,OAAA,CAACH,MAAM;QAACsB,QAAQ,EAAEA,QAAS;QAACW,UAAU,EAAExB,eAAe,CAACyB,MAAO;QAACC,YAAY,EAAEA;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC/F,CAAC;EAET,CAAC,MAAM,OAAO,IAAI;AACrB,CAAC;AAAAxB,EAAA,CAnDKF,WAAW;EAAA,QAMGZ,WAAW;AAAA;AAAA0C,EAAA,GANzB9B,WAAW;AAqDjB,eAAeA,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}