{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useSelector,useDispatch}from'react-redux';import{addCorrect,addIncorrect,selectResultTally,selectFinalResults}from'../app/verbsSlice';import Question from'./Question';import Footer from'./Footer';import _ from'lodash';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const QuestionBox=props=>{const{questionIdArray,filteredVerbs,displayQuestion}=props;// console.log(questionIdArray)\nconst[activeIndex,setActiveIndex]=useState(0);const[testComplete,setTestComplete]=useState(false);const dispatch=useDispatch();useEffect(()=>console.log('render'));// const activeId = questionIdArray[activeIndex]\n// const lastQuestion = useSelector(selectResultTally)\n// const wrongAnswers = useSelector((state) => {\n//    let wrong = state.verbs.questions.incorrectAnswers\n//    let right = state.verbs.questions.correctAnswers\n//    return `Right: ${right} // Wrong: ${wrong}`\n//    // if (testComplete) return selectFinalResults\n//    // else return null\n// })\nconst handleAnswer=(bool,id)=>{if(bool)dispatch(addCorrect(id));else dispatch(addIncorrect(id));setActiveIndex(current=>current+1);// if (lastQuestion) completeTest()\n// else setActiveId((current) => current + 1)\n};const completeTest=event=>{console.log('boop');// event.preventDefault()\n// setTestComplete(true)\n// console.log(wrongAnswers)\n};const selectedVerb=activeId=>{return filteredVerbs.find(el=>{return el.id===activeId;});};if(displayQuestion&&!testComplete){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"question-box\",children:questionIdArray.map((id,index)=>/*#__PURE__*/_jsx(Question,{verb:selectedVerb(id),index:index,display:activeIndex===index,handleAnswer:handleAnswer},index))}),/*#__PURE__*/_jsx(Footer,{activeId:activeIndex,testLength:questionIdArray.length,completeTest:completeTest})]});}else return null;};export default QuestionBox;","map":{"version":3,"names":["React","useState","useEffect","useRef","useSelector","useDispatch","addCorrect","addIncorrect","selectResultTally","selectFinalResults","Question","Footer","_","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","QuestionBox","props","questionIdArray","filteredVerbs","displayQuestion","activeIndex","setActiveIndex","testComplete","setTestComplete","dispatch","console","log","handleAnswer","bool","id","current","completeTest","event","selectedVerb","activeId","find","el","children","map","index","verb","display","testLength","length"],"sources":["/Users/natalierekai/Documents/Developer/portuguese-verbs/verb-tests/src/components/QuestionBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addCorrect, addIncorrect, selectResultTally, selectFinalResults } from '../app/verbsSlice';\n\nimport Question from './Question';\nimport Footer from './Footer';\n\nimport _ from 'lodash'\n\nconst QuestionBox = (props) => {\n   const {questionIdArray, filteredVerbs, displayQuestion} = props\n\n   // console.log(questionIdArray)\n\n   const [activeIndex, setActiveIndex] = useState(0)\n   const [testComplete, setTestComplete] = useState(false)\n\n   const dispatch = useDispatch()\n\n   useEffect(() => console.log('render'))\n\n   // const activeId = questionIdArray[activeIndex]\n\n\n   // const lastQuestion = useSelector(selectResultTally)\n   // const wrongAnswers = useSelector((state) => {\n   //    let wrong = state.verbs.questions.incorrectAnswers\n   //    let right = state.verbs.questions.correctAnswers\n   //    return `Right: ${right} // Wrong: ${wrong}`\n   //    // if (testComplete) return selectFinalResults\n   //    // else return null\n   // })\n\n   const handleAnswer = (bool, id) => {\n      if (bool) dispatch(addCorrect(id))   \n      else dispatch(addIncorrect(id))\n\n      setActiveIndex((current) => current + 1)\n      \n      // if (lastQuestion) completeTest()\n      // else setActiveId((current) => current + 1)\n   }\n\n   const completeTest = (event) => {\n      console.log('boop')\n      // event.preventDefault()\n      // setTestComplete(true)\n      // console.log(wrongAnswers)\n   }\n\n   const selectedVerb = (activeId) => { \n      return filteredVerbs.find(el => {\n         return el.id === activeId\n      }) \n   }\n\n   if (displayQuestion && !testComplete) {\n      \n      return (\n         <>\n            <div id='question-box'>\n               {questionIdArray.map((id, index) => <Question verb={selectedVerb(id)} index={index} display={activeIndex === index} handleAnswer={handleAnswer} key={index} />)}\n            </div>\n            <Footer activeId={activeIndex} testLength={questionIdArray.length} completeTest={completeTest} />\n         </>\n      )\n   } else return null\n}\n\nexport default QuestionBox"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,UAAU,CAAEC,YAAY,CAAEC,iBAAiB,CAAEC,kBAAkB,KAAQ,mBAAmB,CAEnG,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAE7B,MAAO,CAAAC,CAAC,KAAM,QAAQ,QAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,WAAW,CAAIC,KAAK,EAAK,CAC5B,KAAM,CAACC,eAAe,CAAEC,aAAa,CAAEC,eAAe,CAAC,CAAGH,KAAK,CAE/D;AAEA,KAAM,CAACI,WAAW,CAAEC,cAAc,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACyB,YAAY,CAAEC,eAAe,CAAC,CAAG1B,QAAQ,CAAC,KAAK,CAAC,CAEvD,KAAM,CAAA2B,QAAQ,CAAGvB,WAAW,CAAC,CAAC,CAE9BH,SAAS,CAAC,IAAM2B,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAEtC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAC,YAAY,CAAGA,CAACC,IAAI,CAAEC,EAAE,GAAK,CAChC,GAAID,IAAI,CAAEJ,QAAQ,CAACtB,UAAU,CAAC2B,EAAE,CAAC,CAAC,KAC7B,CAAAL,QAAQ,CAACrB,YAAY,CAAC0B,EAAE,CAAC,CAAC,CAE/BR,cAAc,CAAES,OAAO,EAAKA,OAAO,CAAG,CAAC,CAAC,CAExC;AACA;AACH,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CAC7BP,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CACnB;AACA;AACA;AACH,CAAC,CAED,KAAM,CAAAO,YAAY,CAAIC,QAAQ,EAAK,CAChC,MAAO,CAAAhB,aAAa,CAACiB,IAAI,CAACC,EAAE,EAAI,CAC7B,MAAO,CAAAA,EAAE,CAACP,EAAE,GAAKK,QAAQ,CAC5B,CAAC,CAAC,CACL,CAAC,CAED,GAAIf,eAAe,EAAI,CAACG,YAAY,CAAE,CAEnC,mBACGR,KAAA,CAAAF,SAAA,EAAAyB,QAAA,eACG3B,IAAA,QAAKmB,EAAE,CAAC,cAAc,CAAAQ,QAAA,CAClBpB,eAAe,CAACqB,GAAG,CAAC,CAACT,EAAE,CAAEU,KAAK,gBAAK7B,IAAA,CAACJ,QAAQ,EAACkC,IAAI,CAAEP,YAAY,CAACJ,EAAE,CAAE,CAACU,KAAK,CAAEA,KAAM,CAACE,OAAO,CAAErB,WAAW,GAAKmB,KAAM,CAACZ,YAAY,CAAEA,YAAa,EAAMY,KAAQ,CAAC,CAAC,CAC7J,CAAC,cACN7B,IAAA,CAACH,MAAM,EAAC2B,QAAQ,CAAEd,WAAY,CAACsB,UAAU,CAAEzB,eAAe,CAAC0B,MAAO,CAACZ,YAAY,CAAEA,YAAa,CAAE,CAAC,EAClG,CAAC,CAET,CAAC,IAAM,OAAO,KAAI,CACrB,CAAC,CAED,cAAe,CAAAhB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}